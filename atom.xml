<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Knovour Notes]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="https://notes.knovour.ninja/"/>
  <updated>2016-03-03T08:54:24.385Z</updated>
  <id>https://notes.knovour.ninja/</id>
  
  <author>
    <name><![CDATA[Knovour Zheng]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[D3 + p5.js 筆記 - 介紹 p5]]></title>
    <link href="https://notes.knovour.ninja/2016/03/03/d3-p5-js-notes-introduce-p5/"/>
    <id>https://notes.knovour.ninja/2016/03/03/d3-p5-js-notes-introduce-p5/</id>
    <published>2016-03-02T16:43:10.000Z</published>
    <updated>2016-03-03T08:54:24.385Z</updated>
    <content type="html"><![CDATA[<p>先來大致介紹一下 <a href="http://p5js.org/" target="_blank" rel="external">p5.js</a>。</p>
<p>這是 <a href="https://processing.org/" target="_blank" rel="external">Processing</a> 團隊移植的 web 版本，除了 <a href="http://p5js.org/" target="_blank" rel="external">p5</a> 之外還有一個是由 jQuery 作者自己實現，叫 <a href="http://processingjs.org/" target="_blank" rel="external">Processingjs</a> 的函式庫，可別搞混了。</p>
<h2 id="u70BA_u4EC0_u9EBC_u9078_u64C7_p5_uFF1F"><a href="#u70BA_u4EC0_u9EBC_u9078_u64C7_p5_uFF1F" class="headerlink" title="為什麼選擇 p5？"></a>為什麼選擇 p5？</h2><p>以前大學時有教授教過 <a href="https://processing.org/" target="_blank" rel="external">Processing</a> 算是因素之一，入門上不算太難。</p>
<p>在圖片繪製上，<a href="http://p5js.org/" target="_blank" rel="external">p5</a> 也簡化了一些步驟，比如畫線的時候，canvas 的畫法是</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">canvas.moveTo(x, y);</span><br><span class="line">canvas.lineTo(x2, y2);</span><br></pre></td></tr></table></figure>
<p>而 <a href="http://p5js.org/" target="_blank" rel="external">p5</a> 只要一個 <code>line</code> 就可以解決。稍微試過 <a href="http://www.pixijs.com/" target="_blank" rel="external">Pixi.js</a> 與 <a href="http://createjs.com/easeljs" target="_blank" rel="external">EaselJS</a>，這兩個基本上跟 canvas 原本的畫法差不了多少，畢竟定位是遊戲引擎，<a href="http://p5js.org/" target="_blank" rel="external">p5</a> 是繪圖函式庫。<br><a id="more"></a></p>
<h3 id="canvas_1px__u76F4_u7DDA_u554F_u984C"><a href="#canvas_1px__u76F4_u7DDA_u554F_u984C" class="headerlink" title="canvas 1px 直線問題"></a>canvas 1px 直線問題</h3><p>canvas 有一個渲染上的問題，很多剛碰的人大概都會遇到，在畫 1px（或其他奇數）寬的線時，在螢幕上顯示卻有 2px 寬。</p>
<p>簡單圖解類似這樣：</p>
<p><img src="https://farm2.staticflickr.com/1464/25094916659_97593ca520_z.jpg" alt="canvas"></p>
<p>當在座標上畫線時，canvas 並不會在該座標的 右邊或左邊畫線，而是會以座標為準，向兩邊各佔用一半的 px，在這邊就各佔用了 0.5px。而 canvas 的渲染機制就會把兩邊剩下的 0.5 補上顏色，類似防鋸齒那樣，就造成畫 1px 卻有 2px 寬的情形發生。</p>
<p>解決方式就是向前或向後退 0.5 px，而 <a href="http://p5js.org/" target="_blank" rel="external">p5</a> 會幫你搞定這件事，但由於 [D3] 在幫你計算刻度座標時，數值不會那麼漂亮，所以還是會有漏網之魚發生，至少 XY 軸是正常顯示的。</p>
<h2 id="p5__u7684_u57FA_u672C_u69CB_u9020"><a href="#p5__u7684_u57FA_u672C_u69CB_u9020" class="headerlink" title="p5 的基本構造"></a>p5 的基本構造</h2><p>基本上要先建立以下三個函數：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">preload</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 載入 csv, tsv 等檔案</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 初始化資料、建立 canvas 等</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">draw</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 繪製圖形</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其中 <code>preload</code> 可有可無，端看須不需要額外載入資料檔案，而絕大部分繪製的相關函數<strong>必須</strong>要在 <a href="http://p5js.org/" target="_blank" rel="external">p5</a> 指定的函數裡呼叫，否則不會有作用。當然也有其他的函數是獨立的（比如事件偵測），但絕大部分的還是得照著規則進行。</p>
<h2 id="p5__u7684_u554F_u984C"><a href="#p5__u7684_u554F_u984C" class="headerlink" title="p5 的問題"></a>p5 的問題</h2><h3 id="u5168_u57DF_u8B8A_u6578"><a href="#u5168_u57DF_u8B8A_u6578" class="headerlink" title="全域變數"></a>全域變數</h3><p><a href="http://p5js.org/" target="_blank" rel="external">p5</a> 的函數都是全域變數，而一個網頁照一般的寫法也只會寫一個 <code>preload</code>、<code>setup</code>、<code>draw</code> 等函數，當需要數個 canvas 時（畫圖表時有多個畫布很正常吧），創建 canvas 的程式碼全都要擠在同一個 setup 裡（無法用匿名函數分開包裝），在繪製時又會全部擠在一起一次，因而造成很大的麻煩。</p>
<h3 id="u7DE8_u8F2F_u5668"><a href="#u7DE8_u8F2F_u5668" class="headerlink" title="編輯器"></a>編輯器</h3><p>正因為 <a href="http://p5js.org/" target="_blank" rel="external">p5</a> 函式都是全域變數不須宣告，所以當你在寫程式碼時，你的編輯器會出現一堆下劃線，提醒你變數未宣告之類的錯誤。</p>
<h2 id="u89E3_u6C7A_u65B9_u5F0F"><a href="#u89E3_u6C7A_u65B9_u5F0F" class="headerlink" title="解決方式"></a>解決方式</h2><p>用 <code>new</code> 宣告一個。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> p5(ctx =&gt; &#123;</span><br><span class="line">  ctx.setup = () =&gt; &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ctx.draw = () =&gt; &#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>在這裡面，不管要使用什麼函數，都要用 <code>ctx.[函數名稱]</code> 才可使用，但也避免了瀏覽器與編輯器的問題。</p>
<h2 id="u5176_u4ED6"><a href="#u5176_u4ED6" class="headerlink" title="其他"></a>其他</h2><ul>
<li><a href="http://p5js.sketchpad.cc/sp/padlist/all-portfolio-sketches" target="_blank" rel="external">sketchpad</a>: 網路上有一個 <a href="http://p5js.sketchpad.cc/sp/padlist/all-portfolio-sketches" target="_blank" rel="external">sketchpad</a>，上面列了一些用 <a href="http://p5js.org/" target="_blank" rel="external">p5</a> 繪製的圖片與程式碼，可以大致了解一下怎麼寫出來的。</li>
<li><a href="http://blog.infographics.tw/2015/03/beginner-visualization-with-p5js/" target="_blank" rel="external">p5.js － 初學者的資料視覺化函式庫</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>先來大致介紹一下 <a href="http://p5js.org/">p5.js</a>。</p>
<p>這是 <a href="https://processing.org/">Processing</a> 團隊移植的 web 版本，除了 <a href="http://p5js.org/">p5</a> 之外還有一個是由 jQuery 作者自己實現，叫 <a href="http://processingjs.org/">Processingjs</a> 的函式庫，可別搞混了。</p>
<h2 id="u70BA_u4EC0_u9EBC_u9078_u64C7_p5_uFF1F"><a href="#u70BA_u4EC0_u9EBC_u9078_u64C7_p5_uFF1F" class="headerlink" title="為什麼選擇 p5？"></a>為什麼選擇 p5？</h2><p>以前大學時有教授教過 <a href="https://processing.org/">Processing</a> 算是因素之一，入門上不算太難。</p>
<p>在圖片繪製上，<a href="http://p5js.org/">p5</a> 也簡化了一些步驟，比如畫線的時候，canvas 的畫法是</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">canvas.moveTo(x, y);</span><br><span class="line">canvas.lineTo(x2, y2);</span><br></pre></td></tr></table></figure>
<p>而 <a href="http://p5js.org/">p5</a> 只要一個 <code>line</code> 就可以解決。稍微試過 <a href="http://www.pixijs.com/">Pixi.js</a> 與 <a href="http://createjs.com/easeljs">EaselJS</a>，這兩個基本上跟 canvas 原本的畫法差不了多少，畢竟定位是遊戲引擎，<a href="http://p5js.org/">p5</a> 是繪圖函式庫。<br>]]>
    
    </summary>
    
      <category term="D3" scheme="https://notes.knovour.ninja/tags/D3/"/>
    
      <category term="p5.js" scheme="https://notes.knovour.ninja/tags/p5-js/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[D3 + p5.js 筆記 - 前言]]></title>
    <link href="https://notes.knovour.ninja/2016/03/01/d3-p5-js-notes/"/>
    <id>https://notes.knovour.ninja/2016/03/01/d3-p5-js-notes/</id>
    <published>2016-03-01T01:20:14.000Z</published>
    <updated>2016-03-02T19:04:02.176Z</updated>
    <content type="html"><![CDATA[<p>這陣子看了點 <a href="https://d3js.org/" target="_blank" rel="external">D3</a>，並找了官方 wiki 的<a href="https://github.com/mbostock/d3/wiki/Gallery" target="_blank" rel="external">範例</a>來試試，不過不是用 SVG，而是用 canvas 來畫。</p>
<p>之前要寫的網站要生成簡易的圖表，但因為沒學過 <a href="https://d3js.org/" target="_blank" rel="external">D3</a> 的經驗（當時也來不及），所以找了現成的 <a href="http://www.chartjs.org/" target="_blank" rel="external">Chart.js</a> 來用，除了這套之外，之後也在 feedly 看了不少圖表生成的套件介紹，蠻多都是用 canvas 的。不過這倒也不是什麼選擇 canvas 的原因。</p>
<blockquote>
<p>單純犯賤罷了…</p>
</blockquote>
<p>然而，<a href="https://d3js.org/" target="_blank" rel="external">D3</a> 對 canvas 的支援不好，不過這也不是很意外。問題在於要怎麼用 <a href="https://d3js.org/" target="_blank" rel="external">D3</a> 把處理後的資料給 canvas 畫，根據<a href="http://blog.infographics.tw/2015/07/optimize-d3-with-canvas/" target="_blank" rel="external">這裡</a>的介紹，第三種方式算是我在網路上最常看見的，基本上就是處理資料並創建虛假的元素，假裝自己在操作 SVG，然後再把這些<strong>假元素</strong>吐出來再用 canvas 的方式畫出來，怎麼看都覺得…蠻蠢的。所以我比較偏好第二種方式，讓 <a href="https://d3js.org/" target="_blank" rel="external">D3</a> 負責處理資料、生成刻度等等，再用 <a href="http://p5js.org/" target="_blank" rel="external">p5.js</a> 直接畫上去。</p>
<p>總之，之後會加減從 <a href="https://d3js.org/" target="_blank" rel="external">D3</a> 官方的<a href="https://github.com/mbostock/d3/wiki/Gallery" target="_blank" rel="external">範例</a>裡面先挑簡單的例子來練習，也會原始碼放到 GitHub 上。</p>
]]></content>
    <summary type="html">
    <![CDATA[往後會用 [D3] 官方範例來練習，並用 [p5.js] 繪製而成，程式碼會放到 GitHub 上。]]>
    
    </summary>
    
      <category term="D3" scheme="https://notes.knovour.ninja/tags/D3/"/>
    
      <category term="p5.js" scheme="https://notes.knovour.ninja/tags/p5-js/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Koa.js 踩坑筆記]]></title>
    <link href="https://notes.knovour.ninja/2016/02/21/koa-notes/"/>
    <id>https://notes.knovour.ninja/2016/02/21/koa-notes/</id>
    <published>2016-02-21T13:55:52.000Z</published>
    <updated>2016-02-27T21:03:14.854Z</updated>
    <content type="html"><![CDATA[<p><strong> 以 <a href="https://github.com/koajs/koa/tree/v2.x" target="_blank" rel="external">Koa.js 2.0.0-alpha.3</a> 版本為主。 </strong></p>
<h2 id="ctx-body__u6C92_u53CD_u61C9"><a href="#ctx-body__u6C92_u53CD_u61C9" class="headerlink" title="ctx.body 沒反應"></a><code>ctx.body</code> 沒反應</h2><p>當 <code>ctx.body</code> 在 Promise 的函式裡時（如 co）則不會對頁面有任何反應，需在該函式前加上 <code>return</code>。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">index(ctx) &#123;</span><br><span class="line">  <span class="keyword">return</span> co(<span class="function"><span class="keyword">function</span>*(<span class="params"></span>) </span>&#123; <span class="comment">// &lt;- Must have `return`</span></span><br><span class="line">    ctx.body = <span class="string">'success'</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>自訂 <code>middleware</code> 的時候也是如此</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.use((ctx, next) =&gt; &#123;</span><br><span class="line">  ctx.msg = <span class="string">'hello'</span>;</span><br><span class="line">  <span class="keyword">return</span> next(); <span class="comment">// &lt;- Must have `return`</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="1-0__u8207_2-0__u7248_u672C_u554F_u984C"><a href="#1-0__u8207_2-0__u7248_u672C_u554F_u984C" class="headerlink" title="1.0 與 2.0 版本問題"></a>1.0 與 2.0 版本問題</h2><p><a href="https://github.com/koajs/koa" target="_blank" rel="external">Koa.js</a> 的大部分 middleware 都已經開始支援 <a href="https://github.com/koajs/koa/tree/v2.x" target="_blank" rel="external">2.0</a>，鑑於是 alpha 的關係，要安裝這些元件時要加 <code>@next</code> 的 tag，尚未支援的在使用時可以安裝 <code>koa-convert</code> 來轉換。</p>
]]></content>
    <summary type="html">
    <![CDATA[紀錄 Koa.js 的一些用法跟踩到的坑]]>
    
    </summary>
    
      <category term="node.js" scheme="https://notes.knovour.ninja/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Sequelize 踩坑筆記]]></title>
    <link href="https://notes.knovour.ninja/2016/01/12/sequelize-notes/"/>
    <id>https://notes.knovour.ninja/2016/01/12/sequelize-notes/</id>
    <published>2016-01-12T15:44:32.000Z</published>
    <updated>2016-01-20T16:26:34.220Z</updated>
    <content type="html"><![CDATA[<ol>
<li><strong>範例以<a href="https://github.com/sequelize/express-example/tree/master/models" target="_blank" rel="external">這裡</a>為準（以下會換成 ES6 寫法），<a href="https://github.com/koajs/koa" target="_blank" rel="external">Koa</a> 用法亦同</strong></li>
<li><strong>異步程式碼寫法以 <a href="https://github.com/tj/co" target="_blank" rel="external">co</a> 這套件來簡化 Promise 寫法</strong></li>
</ol>
<h2 id="u5167_u5EFA_u53C3_u6578_u7684_u4F4D_u7F6E"><a href="#u5167_u5EFA_u53C3_u6578_u7684_u4F4D_u7F6E" class="headerlink" title="內建參數的位置"></a>內建參數的位置</h2><p><script src="https://gist.github.com/Knovour/387c0699bd427d12b013.js"></script><br><a id="more"></a></p>
<h2 id="u57FA_u672C_u7528_u6CD5"><a href="#u57FA_u672C_u7528_u6CD5" class="headerlink" title="基本用法"></a>基本用法</h2><p>我們在 <code>getFullName</code> 裡加上以下這段</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> co(<span class="function"><span class="keyword">function</span>*(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> user = <span class="keyword">yield</span> User.findOne();</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;user.firstName&#125;</span> <span class="subst">$&#123;user.lastName&#125;</span>`</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p><code>getterMethods</code> 裡可以加入一個 <code>fullName</code> 的 function</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">getterMethods: &#123;</span><br><span class="line">  fullName() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;this.firstName&#125;</span> <span class="subst">$&#123;this.lastName&#125;</span>`</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>這樣 <code>getFullName</code> 裡就可以直接寫 <code>user.fullName</code> 獲取全名了。</p>
<p>在外部使用時可以直接寫</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Models = <span class="built_in">require</span>(<span class="string">'/path/to/models'</span>);  <span class="comment">// 注意範例裡的 index.js 內容</span></span><br><span class="line"></span><br><span class="line">co(<span class="function"><span class="keyword">function</span>*(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> fullName = <span class="keyword">yield</span> Models.User.getFullName();</span><br><span class="line">  <span class="built_in">console</span>.log(fullName);</span><br><span class="line">&#125;).catch(<span class="built_in">console</span>.error);</span><br></pre></td></tr></table></figure>
<h3 id="u4F7F_u7528_u5176_u4ED6_table"><a href="#u4F7F_u7528_u5176_u4ED6_table" class="headerlink" title="使用其他 table"></a>使用其他 table</h3><p>假如我在 <code>User</code> 裡需要用到其他 table（假設叫 <code>Family</code>），我就可以寫 <code>sequelize.models.Family</code> 來呼叫。</p>
<h2 id="u5EFA_u7ACB_u95DC_u806F_uFF08associate_uFF09"><a href="#u5EFA_u7ACB_u95DC_u806F_uFF08associate_uFF09" class="headerlink" title="建立關聯（associate）"></a>建立關聯（associate）</h2><p>假設有個 table 叫 <code>Pet</code>，裡面有個 key 叫 <code>owner</code>，用以紀錄 <code>User</code> 的 id。</p>
<p>兩邊的關聯性程式如下</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 寫在各自的 associate function 裡</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Pet</span></span><br><span class="line">Pet.belongsTo(models.User, &#123; foreignKey: <span class="string">'owner'</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// User（owner 即為 Pet 裡的 key）</span></span><br><span class="line">User.hasMany(models.Pet, &#123; foreignKey: <span class="string">'owner'</span> &#125;);</span><br></pre></td></tr></table></figure>
<h3 id="include"><a href="#include" class="headerlink" title="include"></a>include</h3><p>在查找的 json 中用 include 時，<code>hasMany</code> 與 <code>hasOne</code> 出來的 table 名稱會有單複數差異</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// hasMany</span></span><br><span class="line">&#123;</span><br><span class="line">  firstName: <span class="string">'XXXX'</span>,</span><br><span class="line">  Pets: [&#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// hasOne</span></span><br><span class="line">&#123;</span><br><span class="line">  firstName: <span class="string">'XXXX'</span>,</span><br><span class="line">  Pet: &#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="group"><a href="#group" class="headerlink" title="group"></a>group</h3><p>要將 include 的資料進行 group 或 order 時，需要連帶寫上 table 名稱，例：<code>Pets.id</code>。</p>
]]></content>
    <summary type="html">
    <![CDATA[紀錄 Sequelize 的一些用法跟踩到的坑]]>
    
    </summary>
    
      <category term="node.js" scheme="https://notes.knovour.ninja/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[放棄在 OpenShift 上管理部落格]]></title>
    <link href="https://notes.knovour.ninja/2016/01/11/change-blog-from-openshift-to-github/"/>
    <id>https://notes.knovour.ninja/2016/01/11/change-blog-from-openshift-to-github/</id>
    <published>2016-01-11T15:40:12.000Z</published>
    <updated>2016-01-11T16:40:27.854Z</updated>
    <content type="html"><![CDATA[<p>去年決定將 Blog 從 <a href="http://logdown.com/" target="_blank" rel="external">Logdown</a> 換成自架 <a href="https://ghost.org/" target="_blank" rel="external">Ghost</a> 後，就想找一個線上空間來管理。但 <a href="https://www.linode.com/" target="_blank" rel="external">Linode</a> 或 <a href="https://www.digitalocean.com/" target="_blank" rel="external">Digital Ocean</a> 要從頭來覺得麻煩，而 <a href="https://heroku.com/" target="_blank" rel="external">Heroku</a> 不知道為何怎樣就是看不懂，後來看到 <a href="https://www.openshift.com/" target="_blank" rel="external">OpenShift</a> 設定似乎挺簡單，於是就辦來試試看。</p>
<p>無奈 <a href="https://www.openshift.com/" target="_blank" rel="external">OpenShift</a> 根本 Bug 滿天飛，社群的 <a href="https://ghost.org/" target="_blank" rel="external">Ghost</a> 架設速成 script 根本不能用就算了，連從官方的 Node.js 重頭架也常設定跑失敗，跑到最後居然是鎖我帳號？？更別說我在試用時三不五時被登出，不然就是怎麼按 Application 都沒顯示東西，也不知道怎麼回到我剛剛的設定頁面。<br><a id="more"></a><br>後來過了幾個月回去看又好了（<a href="https://heroku.com/" target="_blank" rel="external">Heroku</a> 這段期間我還是看不懂），但 <a href="https://ghost.org/" target="_blank" rel="external">Ghost</a> 速成 script 還是不能用，至少官方 Node 是可行的，於是就把 <a href="https://ghost.org/" target="_blank" rel="external">Ghost</a> 給弄起來了（中間在 Build 時還是爆掉幾次）。之後要把 <a href="https://ghost.org/" target="_blank" rel="external">Ghost</a> 給升級時，說要額外加 Gear（就是要收錢的意思），我就給他加了，反正一個月只有收大概幾塊錢。</p>
<p>最近幾個月，<a href="https://letsencrypt.org/" target="_blank" rel="external">Let’s Encrypt</a> 開放後熱了起來，想說看能不能在自己的 Blog 弄上去，然後找到了<a href="https://blog.mobiushorizons.com/letsencrypt-ghost/" target="_blank" rel="external">這篇</a>文章，做到替換 <code>index.js</code> 來進行認證的階段怎樣就是失敗，後來又開了社群的 script 來試，結果居然可以跑了，而且替換 <code>index.js</code> 再認證的部份是 OK 的，雖然後面的步驟我沒做，但我也不想弄了。</p>
<p>這兩天把上面幾篇比較重要的文章搬到 <a href="https://github.com/" target="_blank" rel="external">Github</a>，改用 <a href="https://hexo.io/zh-tw/" target="_blank" rel="external">Hexo</a> 管理後，想把 <a href="https://www.openshift.com/" target="_blank" rel="external">OpenShift</a> 上的砍掉重架當備份，無奈這次 script 又不能跑了，既然這樣也不強求了，隨他去吧，砍了帳號，別再收我錢就好。</p>
<p>現在 domain 改用 <a href="https://www.cloudflare.com/" target="_blank" rel="external">CloudFlare</a> 管理，免費方案也有 SSL，這樣搞還比較省事。</p>
]]></content>
    <summary type="html">
    <![CDATA[抱怨一下 OpenShift 的使用感想]]>
    
    </summary>
    
      <category term="ghost" scheme="https://notes.knovour.ninja/tags/ghost/"/>
    
      <category term="openshift" scheme="https://notes.knovour.ninja/tags/openshift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[關於]]></title>
    <link href="https://notes.knovour.ninja/2016/01/10/about/"/>
    <id>https://notes.knovour.ninja/2016/01/10/about/</id>
    <published>2016-01-10T08:21:35.000Z</published>
    <updated>2016-01-11T14:39:48.390Z</updated>
    <content type="html"><![CDATA[<p><img src="https://farm2.staticflickr.com/1656/23668295773_6a48840818_h.jpg" alt=""></p>
<ul>
<li><a href="https://github.com/Knovour" target="_blank" rel="external">Github</a></li>
<li><a href="https://share.readmoo.com/mooer/612883g92/bookshelf/Knovour/total" target="_blank" rel="external">個人書櫃</a></li>
</ul>
<h3 id="u4E4B_u524D_u5F85_u904E_u7684_Blog"><a href="#u4E4B_u524D_u5F85_u904E_u7684_Blog" class="headerlink" title="之前待過的 Blog"></a>之前待過的 Blog</h3><ul>
<li><a href="http://qwert535286.pixnet.net/blog" target="_blank" rel="external">Pixnet</a></li>
<li><a href="http://novathinking.blogspot.tw" target="_blank" rel="external">Blogger</a></li>
<li><a href="http://knovourland.logdown.com" target="_blank" rel="external">Logdown</a></li>
</ul>
<h3 id="u53CB_u7AD9_u9023_u7D50"><a href="#u53CB_u7AD9_u9023_u7D50" class="headerlink" title="友站連結"></a>友站連結</h3><ul>
<li><a href="http://immortalnova.hatenablog.com" target="_blank" rel="external">遊戲王的反主流學院</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[關於 Knovour Notes]]>
    
    </summary>
    
      <category term="about" scheme="https://notes.knovour.ninja/tags/about/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[在 Linux 上執行 Path of Exile (PoE)]]></title>
    <link href="https://notes.knovour.ninja/2015/09/16/path-of-exile-on-linux/"/>
    <id>https://notes.knovour.ninja/2015/09/16/path-of-exile-on-linux/</id>
    <published>2015-09-16T13:26:00.000Z</published>
    <updated>2016-01-20T17:23:33.572Z</updated>
    <content type="html"><![CDATA[<p><img src="https://farm1.staticflickr.com/621/21000960109_98f4415f3d_c.jpg" alt="poe on wine"></p>
<p>之前在 Wine 上跑過一陣子 PoE，但經過幾次更新後，loading 畫面除了狂閃外基本上就是完全進不去的狀態，然而當時也是有點膩了，所以也懶得折騰（基本上都是在講把 Wine 降級或是裝 PlayOnLinux，不過不想這樣搞）。</p>
<p>現在 2.0 出了，「據說」修好了錯位，也偶然發現有一篇比較不那麼麻煩的設定<a href="https://russell.cc/path-of-exile-linux/" target="_blank" rel="external">文章</a>，試一試還真的成功了，在這邊紀錄一下。<br><a id="more"></a><br>註：文章裡似乎是把 PoE 另外裝其他地方，再外帶參數啟動（我的理解啦），但我沒有用 Wine 模擬其他東西的需要，所以就把覺得可以跳過的部份跳過，下面的紀錄基本上就是個精簡後的設定步驟。</p>
<h2 id="u74B0_u5883"><a href="#u74B0_u5883" class="headerlink" title="環境"></a>環境</h2><ul>
<li><a href="https://manjaro.github.io/" target="_blank" rel="external">Manjaro Linux</a></li>
<li><a href="https://www.kde.org/" target="_blank" rel="external">KDE Plasma 5</a></li>
<li>NVIDIA 顯卡</li>
</ul>
<h2 id="u57F7_u884C_winecfg"><a href="#u57F7_u884C_winecfg" class="headerlink" title="執行 winecfg"></a>執行 winecfg</h2><ol>
<li>選定 windows 版本（原文是 8 不過選 10 也沒差）。</li>
<li>將 <code>openal32</code> 加進函式庫裡。</li>
<li>勾選虛擬桌面，解析度自己根據需求調整。</li>
</ol>
<p><img src="https://farm1.staticflickr.com/577/21195623851_4c22a1dc13_b.jpg" alt="winecfg"></p>
<h2 id="u5B89_u88DD_windows__u76F8_u95DC_u5957_u4EF6"><a href="#u5B89_u88DD_windows__u76F8_u95DC_u5957_u4EF6" class="headerlink" title="安裝 windows 相關套件"></a>安裝 windows 相關套件</h2><p>執行 <code>winetricks directx9 vcrun2010 riched20 usp10</code></p>
<h2 id="u5B89_u88DD_u904A_u6232"><a href="#u5B89_u88DD_u904A_u6232" class="headerlink" title="安裝遊戲"></a>安裝遊戲</h2><p>執行 PoE 安裝檔，之後再開啟下載主程式，這部份不會有問題，但主程式裝完後先關掉不要按 Launch，不然 wine 會當掉。</p>
<h2 id="u57F7_u884C_wine_regedit"><a href="#u57F7_u884C_wine_regedit" class="headerlink" title="執行 wine regedit"></a>執行 <code>wine regedit</code></h2><p>安裝期間可以先處理這部份（在 regedit 裡移到對應的路徑）</p>
<ol>
<li><code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\FontSubstitutes</code>：新增一個字串值叫 <code>Fontin SmallCaps</code>，數值為 <code>Fontin</code>。</li>
<li><code>HKEY_CURRENT_USER\Software\Wine\Direct3D</code>：若沒有 <code>Direct3D</code> 的資料夾則自行新增一個。在底下新增以下資料：<ol>
<li><code>OffscreenRenderingMode</code>：字串值為 <code>backbuffer</code>。</li>
<li><code>VideoMemorySize</code>：這是你的顯卡記憶體大小，以 MB 計，我的是 2048。</li>
<li><code>UseGLSL</code>：NVIDIA 顯卡限定，值為 <code>disabled</code>，若執行時覺得有問題可以把這個值移除看看。</li>
</ol>
</li>
</ol>
<p><img src="https://farm1.staticflickr.com/738/20999863178_1337f3d5a8_b.jpg" alt="regedit"></p>
<h2 id="u8A2D_u5B9A_PoE"><a href="#u8A2D_u5B9A_PoE" class="headerlink" title="設定 PoE"></a>設定 PoE</h2><p>到 <code>~/文件/My Games/Path of Exile/</code>（不同發行版位置可能不大一樣），開啟 <code>production_Config.ini</code>，在 <code>[DISPLAY]</code> 底下新增或替換以下設定：</p>
<ol>
<li><code>fullscreen=true</code></li>
<li><code>borderless_windowed_fullscreen=false</code></li>
<li><code>resolution_height=虛擬桌面高度</code></li>
<li><code>resolution_width=虛擬桌面寬度</code></li>
</ol>
<h2 id="u7D50_u675F"><a href="#u7D50_u675F" class="headerlink" title="結束"></a>結束</h2><p>等 PoE 主程式載完就可以啟動了。</p>
<p><img src="https://farm6.staticflickr.com/5805/21197789131_d983728162_o.jpg" alt="play"></p>
<h2 id="u611F_u60F3"><a href="#u611F_u60F3" class="headerlink" title="感想"></a>感想</h2><ol>
<li>基本上不會像以前那樣 FPS 掉很重了，但偶爾會破圖。</li>
<li>地圖亮度偏暗，地穴根本是黑的，使用冰系或雷系技能擊中或發動瞬間會照亮地圖（火焰反而沒法照亮…），招喚 Golem（2.0 新技能）可以永久照亮。</li>
<li>音效要在設定裡選擇 <code>Generic Software on out</code> 開頭的才有聲音。</li>
<li>只有 Act4 沒錯位就算了，Act123 + Map 的錯位感覺更嚴重了是怎樣，新增的 Map 也是一樣慘。</li>
</ol>
<h2 id="u53C3_u8003_u4F86_u6E90"><a href="#u53C3_u8003_u4F86_u6E90" class="headerlink" title="參考來源"></a>參考來源</h2><p><a href="https://russell.cc/path-of-exile-linux/" target="_blank" rel="external">Path of Exile on Linux</a></p>
]]></content>
    <summary type="html">
    <![CDATA[用 Wine 執行 PoE，無須降級、免裝 PlayOnLinux。]]>
    
    </summary>
    
      <category term="game" scheme="https://notes.knovour.ninja/tags/game/"/>
    
      <category term="linux" scheme="https://notes.knovour.ninja/tags/linux/"/>
    
      <category term="wine" scheme="https://notes.knovour.ninja/tags/wine/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[用 PM2 部署 node server]]></title>
    <link href="https://notes.knovour.ninja/2015/08/13/deploy-node-js-by-pm2/"/>
    <id>https://notes.knovour.ninja/2015/08/13/deploy-node-js-by-pm2/</id>
    <published>2015-08-12T18:38:00.000Z</published>
    <updated>2016-01-11T15:48:49.371Z</updated>
    <content type="html"><![CDATA[<h2 id="u524D_u7F6E_u4F5C_u696D"><a href="#u524D_u7F6E_u4F5C_u696D" class="headerlink" title="前置作業"></a>前置作業</h2><p>首先先設定完<a href="https://notes.knovour.ninja/2015/07/17/deploy-node-js-by-shipit/">這篇文</a>的前置作業。</p>
<p><strong>部署與開發用的機器都要安裝 PM2</strong>：<code>sudo npm i pm2 -g</code></p>
<h2 id="u90E8_u7F72_u8A2D_u5B9A"><a href="#u90E8_u7F72_u8A2D_u5B9A" class="headerlink" title="部署設定"></a>部署設定</h2><p>於專案資料夾底下執行 <code>pm2 ecosystem</code> 生成 <code>ecosystem.json5</code>，修改副檔名為 json 檔以便顯示語法 hightlight。</p>
<p>將裡面的內容做修改</p>
<script src="https://gist.github.com/Knovour/f27c0cf743e991973f57.js"></script>

<p>注意最後一句裡 <code>pm2 startOrRestart ecosystem.json</code> 的副檔名是否相同。<br><a id="more"></a></p>
<h2 id="u958B_u59CB_u90E8_u7F72"><a href="#u958B_u59CB_u90E8_u7F72" class="headerlink" title="開始部署"></a>開始部署</h2><p>第一次部署時先執行 setup</p>
<p><code>pm2 deploy ecosystem.json production setup</code></p>
<p>成功後就可以正式部署了</p>
<p><code>pm2 deploy ecosystem.json production</code></p>
<p>之後專案更新時只要執行第二句即可。</p>
<p>一切順利的話 PM2 就會在 server 端開始執行了。</p>
<h2 id="u984D_u5916_u6307_u4EE4"><a href="#u984D_u5916_u6307_u4EE4" class="headerlink" title="額外指令"></a>額外指令</h2><p>開機啟動：<code>pm2 startup -u DEPLOY_SERVER_USER_ACCOUNT</code></p>
<p>不設 <code>-u</code>（user）的話，在開機時預設就會以 root 權限執行。</p>
<p>其他指令或設定請至 <a href="https://github.com/Unitech/pm2" target="_blank" rel="external">PM2</a> 檢視說明文件</p>
<h2 id="u53C3_u8003_u4F86_u6E90"><a href="#u53C3_u8003_u4F86_u6E90" class="headerlink" title="參考來源"></a>參考來源</h2><ul>
<li><a href="https://github.com/Unitech/pm2" target="_blank" rel="external">PM2</a></li>
<li><a href="https://github.com/Unitech/PM2/blob/master/ADVANCED_README.md" target="_blank" rel="external">PM2 Advance Readme</a></li>
<li><a href="http://www.toobug.net/article/using_pm2_deploy.html" target="_blank" rel="external">使用 PM2 Deploy 部署基于 Git 版本管理的网站应用</a></li>
<li><a href="https://www.gitbook.com/book/wohugb/pm2/details" target="_blank" rel="external">PM2 GitBook</a></li>
<li><a href="http://nicmitchell.com/2015/04/deploying-node-js-applications-with-pm2/" target="_blank" rel="external">Deploying Node.js Applications with PM2</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[用 PM2 進行 node.js server 佈署。]]>
    
    </summary>
    
      <category term="deploy" scheme="https://notes.knovour.ninja/tags/deploy/"/>
    
      <category term="node.js" scheme="https://notes.knovour.ninja/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[用 Shipit 部署 node server]]></title>
    <link href="https://notes.knovour.ninja/2015/07/17/deploy-node-js-by-shipit/"/>
    <id>https://notes.knovour.ninja/2015/07/17/deploy-node-js-by-shipit/</id>
    <published>2015-07-17T15:42:00.000Z</published>
    <updated>2016-01-10T16:31:14.553Z</updated>
    <content type="html"><![CDATA[<h2 id="u524D_u7F6E_u4F5C_u696D"><a href="#u524D_u7F6E_u4F5C_u696D" class="headerlink" title="前置作業"></a>前置作業</h2><p><strong>假設是全新的 Linux，帳號為 deploy</strong></p>
<ol>
<li>在 github 等託管服務中登錄 deploy server 的 ssh public key。</li>
<li>設定 ssh 免密碼遠端登入：在 <code>.ssh/authorized_keys</code> 裡貼上開發機的 ssh public key。</li>
<li>如有需要，將 server 裡的 global package 裝好，如 bower、sails、grunt-cli 等等。</li>
<li>設定 server 裡程式碼的存放位置，假設為 <code>/usr/src</code>。</li>
</ol>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/src/<span class="keyword">my</span>-project-<span class="property">name</span></span><br><span class="line">chown deploy:deploy /usr/src/<span class="keyword">my</span>-project-<span class="property">name</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="u5728_u958B_u767C_u6A5F_u5B89_u88DD_u76F8_u95DC_u5957_u4EF6"><a href="#u5728_u958B_u767C_u6A5F_u5B89_u88DD_u76F8_u95DC_u5957_u4EF6" class="headerlink" title="在開發機安裝相關套件"></a>在開發機安裝相關套件</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo npm <span class="tag">i</span> shipit-cli -g</span><br><span class="line">npm <span class="tag">i</span> shipit-deploy shipit-npm --save-dev</span><br></pre></td></tr></table></figure>
<h2 id="ShipIt_21"><a href="#ShipIt_21" class="headerlink" title="ShipIt!"></a>ShipIt!</h2><p>在專案資料夾目錄產生 <code>shipitfile.js</code></p>
<p>內容如下</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> (<span class="params">shipit</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">require</span>(<span class="string">'shipit-deploy'</span>)(shipit);  <span class="comment">// remote deploy</span></span><br><span class="line">  <span class="built_in">require</span>(<span class="string">'shipit-npm'</span>)(shipit);      <span class="comment">// remote auto install npm packages</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> config = &#123;</span><br><span class="line">    <span class="keyword">default</span>: &#123;</span><br><span class="line">      workspace: <span class="string">'/tmp/project-name-in-deploy-server'</span>,</span><br><span class="line">      deployTo: <span class="string">'/usr/src/project-name-in-deploy-server'</span>,</span><br><span class="line">      repositoryUrl: <span class="string">'your git remote url (github, bitbucket, etc...)'</span>,</span><br><span class="line">      ignores: [<span class="string">'.git'</span>, <span class="string">'node_modules'</span>],</span><br><span class="line">      keepReleases: <span class="number">2</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    staging: &#123;</span><br><span class="line">      servers: <span class="string">'deploy@your-deploy-server-ip'</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  shipit.initConfig(config);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>輸入 <code>shipit staging deploy</code> 開始部署</p>
<h2 id="u984D_u5916_u547D_u4EE4"><a href="#u984D_u5916_u547D_u4EE4" class="headerlink" title="額外命令"></a>額外命令</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">shipit.initConfig(config);</span><br><span class="line"><span class="comment">// code 加在這行之後</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> current = config.<span class="keyword">default</span>.deployTo + <span class="string">'/current'</span>;</span><br><span class="line"><span class="comment">// shipit 會將 source code 放在 deploy server 專案資料夾裡的 current 中</span></span><br><span class="line">shipit.task(<span class="string">'server-on'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> shipit.remote(<span class="string">'cd '</span> + current + <span class="string">' &amp;&amp; bower i &amp;&amp; npm start'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">shipit.task(<span class="string">'start'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  shipit.start([<span class="string">'deploy'</span>, <span class="string">'server-on'</span>]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>執行 <code>shipit staging start</code></p>
<h2 id="u57FA_u672C_u8A2D_u5B9A_u7684_u6A23_u5B50"><a href="#u57FA_u672C_u8A2D_u5B9A_u7684_u6A23_u5B50" class="headerlink" title="基本設定的樣子"></a>基本設定的樣子</h2><script src="https://gist.github.com/Knovour/97760c466552c2ed12db.js"></script>



<h2 id="u53C3_u8003_u4F86_u6E90"><a href="#u53C3_u8003_u4F86_u6E90" class="headerlink" title="參考來源"></a>參考來源</h2><ul>
<li><a href="http://www.therightcode.net/deploy-nodejs-application-using-shipit/" target="_blank" rel="external">Forget Capistrano and deploy your node.js application using Shipit</a>（裡面是用 grunt 當範例，但我用 grunt 的方式跑不起來）</li>
<li><a href="https://github.com/shipitjs/shipit" target="_blank" rel="external">Shipit</a></li>
<li><a href="https://github.com/shipitjs/shipit-deploy" target="_blank" rel="external">shipit-deploy</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[用 Shipit 做簡單的 node.js server 佈署。]]>
    
    </summary>
    
      <category term="deploy" scheme="https://notes.knovour.ninja/tags/deploy/"/>
    
      <category term="node.js" scheme="https://notes.knovour.ninja/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[記錄幾個 Google 搜尋技巧]]></title>
    <link href="https://notes.knovour.ninja/2015/04/15/some-google-search-skills/"/>
    <id>https://notes.knovour.ninja/2015/04/15/some-google-search-skills/</id>
    <published>2015-04-15T13:43:00.000Z</published>
    <updated>2016-01-11T16:43:28.661Z</updated>
    <content type="html"><![CDATA[<p><img src="https://farm6.staticflickr.com/5728/20759258074_6b108b0dac_c.jpg" alt="Google"></p>
<p>記錄幾個自己在搜尋時常用到的方式</p>
<h2 id="u4E00_u822C_u65B9_u5F0F"><a href="#u4E00_u822C_u65B9_u5F0F" class="headerlink" title="一般方式"></a>一般方式</h2><ul>
<li><code>-</code>：排除某個關鍵字。例：<code>ui -jquery</code></li>
<li><code>site:</code>：搜尋特定網站內容。例：<code>site:medium.com node.js</code></li>
<li><code>&quot;關鍵字&quot;</code>：限定搜尋結果包含引號內完整字串。</li>
</ul>
<h2 id="u984D_u5916_u95DC_u9375_u5B57"><a href="#u984D_u5916_u95DC_u9375_u5B57" class="headerlink" title="額外關鍵字"></a>額外關鍵字</h2><ul>
<li><code>alternative(s)</code>：搜尋某個軟體或 library 有沒有類似的東西。若搜尋的是 library 相關的，搜尋結果裡的 <a href="http://alternativeto.net/" target="_blank" rel="external">AlternativeTo</a> 網站則可以不用管，因為裡面舉的例子還是以軟體為主。</li>
<li><code>how (to)</code>：搜尋一些 server 或開發環境架設時會用到</li>
<li><code>附近</code>：搜尋 Map 時會用到。如：<code>101 附近 餐廳</code></li>
</ul>
<a id="more"></a>
<h2 id="u4E00_u4E9B_u7279_u6B8A_u7B26_u865F_u7684_u82F1_u6587"><a href="#u4E00_u4E9B_u7279_u6B8A_u7B26_u865F_u7684_u82F1_u6587" class="headerlink" title="一些特殊符號的英文"></a>一些特殊符號的英文</h2><p>主要是以前剛接觸 CSS3 跟 HTML 時會找的符號 (sign 或 symbol)</p>
<ul>
<li><code>&gt;</code>：greater than</li>
<li><code>~</code>：tilde</li>
<li><code>+</code>：plus</li>
<li><code>:</code>：colon</li>
<li><code>;</code>：semicolon</li>
<li><code>-</code>：dash、minus</li>
<li><code>_</code>：underline</li>
<li><code>,</code>：comma</li>
<li><code>.</code>：dot</li>
<li><code>•</code>：bullet point</li>
<li><code>·</code>：middot</li>
<li><code>$</code>：dollar</li>
<li><code>#</code>：number、pound (美式)</li>
</ul>
<h2 id="u5E7E_u500B_UI__u76F8_u95DC_u5143_u4EF6_u7684_u82F1_u6587"><a href="#u5E7E_u500B_UI__u76F8_u95DC_u5143_u4EF6_u7684_u82F1_u6587" class="headerlink" title="幾個 UI 相關元件的英文"></a>幾個 UI 相關元件的英文</h2><ul>
<li><code>hamburger menu</code>：就是本 blog 左上角那三條線。</li>
<li><code>ghost button</code>：只有 border 沒有 background-color 的按鈕。</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[紀錄幾個自己在搜尋時常用到的方式（符號、關鍵字、某些符號的英文單字等）]]>
    
    </summary>
    
      <category term="google" scheme="https://notes.knovour.ninja/tags/google/"/>
    
      <category term="search" scheme="https://notes.knovour.ninja/tags/search/"/>
    
  </entry>
  
</feed>
