<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Knovour Notes</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://notes.knovour.ninja/"/>
  <updated>2016-07-17T13:06:18.029Z</updated>
  <id>https://notes.knovour.ninja/</id>
  
  <author>
    <name>Knovour Zheng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>這幾年使用 Linux 當一般作業系統的感受</title>
    <link href="https://notes.knovour.ninja/2016/07/08/years-of-using-linux/"/>
    <id>https://notes.knovour.ninja/2016/07/08/years-of-using-linux/</id>
    <published>2016-07-08T04:19:39.000Z</published>
    <updated>2016-07-17T13:06:18.029Z</updated>
    
    <content type="html">&lt;p&gt;上圖是我的 Linux 現在的樣子：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;發行版：&lt;a href=&quot;https://manjaro.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Manjaro Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;桌面環境：KDE 5 Plasma&lt;/li&gt;
&lt;li&gt;佈景：Maia Theme&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Linux 在我大學期間時，就開始嘗試拿來作為一般的作業系統使用，但那段期間其實一直都在 Windows 跟 Linux 之間切換（你知道的，遊戲），後來這兩年開始固定用 Linux，工作時用 Mac，基本上已經沒怎麼碰 Windows 了。&lt;/p&gt;
&lt;p&gt;當然，這個過程並沒有讓我成為什麼 Linux 大師，我也沒有這個打算，只是嘗試能在日常生活中使用而已。前一陣子看到&lt;a href=&quot;https://lex.sh/linux10khrs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;這篇文章&lt;/a&gt;後覺得很有趣，於是決定也來寫篇自己的經歷以及感受。以下我會將這篇文章分成數個大項目來做探討。&lt;/p&gt;
&lt;p&gt;裏面一些資訊可能與印象有所不同，請見諒。&lt;/p&gt;
&lt;h2 id=&quot;作業系統&quot;&gt;&lt;a href=&quot;#作業系統&quot; class=&quot;headerlink&quot; title=&quot;作業系統&quot;&gt;&lt;/a&gt;作業系統&lt;/h2&gt;&lt;p&gt;我第一個用的 Linux 發行版是 Ubuntu 7.10，當時 &lt;a href=&quot;http://www.compiz.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Compiz Fusion&lt;/a&gt; 這個桌面特效大補帖的相關影片出現時小紅了一陣子，我也是在那時候知道 Linux 以及其中的 Ubuntu。我已經忘記當時看到的影片是哪個了，不過就是如下面的影片所呈現的那樣。&lt;/p&gt;
&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;//www.youtube.com/embed/4QokOwvPxrE&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;p&gt;那段期間打開 Ubuntu 之後，也不過就是玩一玩特效、隨便打幾個指令、開 Firefox 晃一下就切回去玩遊戲了，沒辦法，這就是 Windows 最大的優勢。&lt;/p&gt;
&lt;p&gt;到大二的時候，原本的電腦寄回老家，我再另外買一台基本配備的套裝主機，那時候 Vista 剛推出，而我也不疑有他直接用預設的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;誰知道這正是噩夢的開始。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;當時那台主機記憶體只有 1MB，但光 Vista 本身居然就吃了 70% ~ 80% 的記憶體，隨便晃個滑鼠、開個視窗，記憶體要過 90% 都不是問題。在這情況下，這作業系統根本是沒辦法用的，不只吃記憶體，而且極端的不穩定，雖然後來多插了記憶體以及幾次系統更新後症狀逐漸減輕，但從那時候開始，我在空閒時折騰 Ubuntu 的次數反而大幅增加了。&lt;/p&gt;
&lt;p&gt;比起 Vista，Ubuntu 裝上之後記憶體只吃了 20% ~ 30% 左右，開特效也沒有什麼大問題，但自從 8.04、8.10 版本推出之後，問題也開始多了。我還蠻執著於軟體什麼都要到最新版才行，所以新版本推出之後我也就升級了，但版本上到 8 之後，一切都不那麼美好了。半年一次的版本升級基本上就是個災難，直接升級的後果會讓 Ubuntu 有一堆奇奇怪怪的問題，與其花時間找方法解決這些問題，直接用新版重灌取代升級反而是最好的方法；當然，如果只要半年重灌一次就可以解決那到還好，怎樣都比我重灌 Vista 的次數多。但 Ubuntu 的軟體、library 版本不上不下，也稱不上穩定，在系統更新個幾次之後又開始有奇怪的問題了。&lt;/p&gt;
&lt;p&gt;那時 Ubuntu 給我的感受是：&lt;strong&gt;我有的問題別人不一定有，別人有的問題我基本上都會有，但別人提供的解決方式起碼有一半在我這邊行不通。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;拜這所賜，當時我覺得我的 Google 搜尋能力得到了提升，而主打一般人也能使用的 Linux 反而變得很常與指令、系統 config 打交道。所以想學好 Linux 基礎的話，去被 Ubuntu 惡整搞不好是最快的方式，這是我折騰到後面的感想。也因為如此，在我心目中最穩定的 Ubuntu 版本是 7.10（當然我也不算是很頻繁的用他），而在架伺服器時，我通常會先考慮 &lt;a href=&quot;https://www.centos.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CentOS&lt;/a&gt; 或 &lt;a href=&quot;https://www.scientificlinux.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Scientific Linux&lt;/a&gt;，Ubuntu Server 反而不會是我優先考慮的發行版。&lt;/p&gt;
&lt;p&gt;後來有次在 Ubuntu 上當一次機之後，每重開機一次就有某個系統設定或某個軟體設定被初始化，重開越多次，就會越像系統剛裝好的樣子。在那場悲劇之後，一怒之下我就跳槽到 &lt;a href=&quot;https://www.archlinux.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ArchLinux&lt;/a&gt; 了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/g130C.jpg&quot; alt=&quot;在此掛上 8.10 的桌布來紀念那段日子（這也是歷來 Ubuntu 版本裡，我最喜歡的預設桌布）&quot;&gt;&lt;/p&gt;
&lt;p&gt;當時看到這篇 &lt;a href=&quot;http://antimalicious.blogspot.tw/2009/04/archlinux.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ArchLinux 推廣教學文&lt;/a&gt;時就一直考慮要換，看了幾次教學文以及搜尋其他教學文章跟 VM 練習之後才下定了決心。要知道，那時候智慧型手機還沒有推出，手機上網也是件不容易的事，所以當時我把過程抄在紙上後，燒了光碟就開始弄了。當時的安裝過程就跟那篇推廣文的內容差不多，有基本的引導流程，所以沒有很大的麻煩（其實我不小心把 D 槽給格式化了）。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.archlinux.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ArchLinux&lt;/a&gt; 裝完後問題其實也不少，但有很完整的 Wiki 在，基本上都是可以解決的事，就算要額外搜尋，也不太會有別人的解決方式我行不通的情形發生，雖然安裝過程麻煩了一些，但重灌的次數少了非常多。話雖如此，&lt;a href=&quot;https://www.archlinux.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ArchLinux&lt;/a&gt; 的開發者卻覺得應該要提高安裝的難度，所以新版連基本的安裝導引都拿掉了，你得從頭到尾打指令才行。&lt;/p&gt;
&lt;p&gt;第一次重灌時覺得算了，反正久久才會重灌一次，等到那個「久久」的時刻真的來臨時，我反而沒什麼耐心再搞安裝了。在這之前有搜尋過 &lt;a href=&quot;https://www.archlinux.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ArchLinux&lt;/a&gt; 的衍生版，其中 &lt;a href=&quot;https://chakralinux.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Chakra&lt;/a&gt; 以及 &lt;a href=&quot;https://manjaro.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Manjaro Linux&lt;/a&gt; 是比較常看到有在討論的，安裝上也比較方便，在試了幾次 &lt;a href=&quot;https://chakralinux.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Chakra&lt;/a&gt; 都無法安裝成功後，我選擇了後者直到現在。&lt;/p&gt;
&lt;h2 id=&quot;桌面環境&quot;&gt;&lt;a href=&quot;#桌面環境&quot; class=&quot;headerlink&quot; title=&quot;桌面環境&quot;&gt;&lt;/a&gt;桌面環境&lt;/h2&gt;&lt;p&gt;Linux 的桌面環境基本上就是 Gnome 跟 KDE 這兩個為大宗，前者基於 GTK，後者基於 Qt，一個是以 Mac 桌面環境為參考，一個是以 Windows 為參考；在版本前進到 Gnome 3 以及 KDE 4 之後，兩者都開始走出屬於自己的路了。&lt;/p&gt;
&lt;p&gt;當時 Ubuntu 是以 Gnome 2 為預設環境，8.10 以前是以淺色為基調&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i1-linux.softpedia-static.com/screenshots/Ubuntu-Gutsy-Gibbon_1.jpg&quot; alt=&quot;來源：Softpedia&quot;&gt;&lt;/p&gt;
&lt;p&gt;基本上看起來就是很無聊的樣子，到 9.04 時換成深色佈景，質感提升了不少。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://news.softpedia.com/images/extra/LINUX/large/ubuntu904released-large_001.jpg&quot; alt=&quot;來源：Softpedia&quot;&gt;&lt;/p&gt;
&lt;p&gt;但對我來說他還是有個問題 ― 他很好看，但不耐看，看了差不多三個月之後就看膩了。在那段期間，除了折騰系統上的問題之外，我還深深陷入了更換佈景及調整桌面配置的過程中；只要在 RSS 上看到有什麼 Gnome 佈景推荐的文章，或是像 &lt;a href=&quot;https://www.gnome-look.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GNOME-LOOK.ORG&lt;/a&gt; 之類的網站看有什麼不錯的佈景，我就會抓下來試一試。&lt;/p&gt;
&lt;p&gt;這些佈景在試用後的感想是：&lt;strong&gt;深色系的普遍都不好看也不耐看，淺色系的有些雖不好看但還算耐看。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;而那時在我的作業系統上留最久的佈景應該是 &lt;a href=&quot;https://www.gnome-look.org/content/show.php/Bamboo+Zen?content=85860&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bamboo Zen&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://cn.pling.com/img//hive/content-pre2/85860-2.jpg&quot; alt=&quot;來源：GNOME-LOOK.ORG&quot;&gt;&lt;/p&gt;
&lt;p&gt;當時有一部份 Gnome 的淺色系佈景上喜歡打上一種噱頭：&lt;strong&gt;像 Mac 一樣&lt;/strong&gt;。我不懂為什麼很多人想要讓作業系統看起來「像 Mac 一樣」，但他真的發生了。他們把色彩調成淺銀色或銀白色，加上點光澤，換掉圖標（我覺得在這當中最可憐的是 Firefox，因為他常被迫換上 Safari 的圖標），一個 Mac Like 介面就誕生了。在這段期間，最嚴重的莫過於誕生了 Pear OS 這個發行版。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i1-news.softpedia-static.com/images/news2/Pear-OS-Is-Making-a-Comeback-Rumor-468670-3.jpg&quot; alt=&quot;來源：Softpedia&quot;&gt;&lt;/p&gt;
&lt;p&gt;不論這些&lt;strong&gt;像 Mac 一樣&lt;/strong&gt;的佈景有多麼強調這件事，他們唯一不會跟你講的就是：「當你裝好之後，切記！盯著桌面看就好，不要做任何事，不要打開任何東西。」，因為隨便點開一個視窗就徹底破功了。這種事在 Android 上也在發生，只是模仿對象變成了 iOS。&lt;/p&gt;
&lt;p&gt;不過 Pear OS 已經收掉了，目前的 Mac Like 發行版變成 &lt;a href=&quot;https://sourceforge.net/projects/gmaclinux/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GMac Linux&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://a.fsdn.com/con/app/proj/gmaclinux/screenshots/Screenshot%20from%202016-04-30%2014:30:55.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;至於 Ubuntu 自己的 &lt;a href=&quot;https://unity.ubuntu.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Unity&lt;/a&gt; 介面我就不知道要說啥了…&lt;/p&gt;
&lt;p&gt;鏡頭切到 KDE 這邊，當時 KDE 3 我覺得沒什麼特色，完全沒有想用的慾望；但是當 KDE 4 推出之後，整個感受都不一樣了，不僅好看，而且耐看。在那之後推出的 Windows 7 更被調侃是「抄襲 KDE 4」，而後來 KDE 也很不客氣的把 Windows 7 上一些特色給抄了過來（比如拖拉標題到邊邊讓他佔半個螢幕）。所以在我跳槽到 &lt;a href=&quot;https://www.archlinux.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ArchLinux&lt;/a&gt; 時，我也改用 KDE 作為我的桌面環境。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://pic.pimg.tw/qwert535286/4b30ae36828b3.jpg&quot; alt=&quot;這是當時的樣子：ArchLinux + KDE 4&quot;&gt;&lt;/p&gt;
&lt;p&gt;KDE 好看歸好看，但還是得說，他從來沒有穩定過。並不是說用到一半就會全面崩潰之類的（早期倒是很頻繁），但總是會東壞一點西壞一點，雖不影響正常使用，但總是有疙瘩。&lt;/p&gt;
&lt;p&gt;後來 KDE 5 Plasma 推出，整體而言又更上了一層，但還是一樣，他從來沒有真正穩定過，至少現在問題已經少非常多了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://c2.staticflickr.com/8/7788/28077094630_326e5dd9b8_o.png&quot; alt=&quot;這是 KDE 5 Plasma 的預設佈景&quot;&gt;&lt;/p&gt;
&lt;p&gt;有一個主打 Material Design 的桌面環境 &lt;a href=&quot;http://papyros.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Papyros&lt;/a&gt; 還在開發中，等穩定的時候再來試試看。&lt;/p&gt;
&lt;p&gt;題外話：如果想要找個節省資源的桌面環境，比起 &lt;a href=&quot;http://www.xfce.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Xfce&lt;/a&gt;，我會比較推荐 &lt;a href=&quot;http://lxqt.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LXQt&lt;/a&gt;，至於其他一些比較硬派的桌面環境，我的興趣就不大了。&lt;/p&gt;
&lt;h2 id=&quot;開發工具&quot;&gt;&lt;a href=&quot;#開發工具&quot; class=&quot;headerlink&quot; title=&quot;開發工具&quot;&gt;&lt;/a&gt;開發工具&lt;/h2&gt;&lt;p&gt;一開始把玩過一下 &lt;a href=&quot;https://www.gnu.org/software/emacs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Emacs&lt;/a&gt;，後來在 &lt;a href=&quot;http://www.vim.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Vim&lt;/a&gt; 上使用了一段不算短的時間，然而最終我還是沒能掌握那一堆快捷鍵以及指令的精髓，要是逼我使用 60% 鍵盤，我大概會瘋掉。那時大學時學的語言還是以 Java 為主，所以 Eclipse 等 IDE 還是比較常使用的，曾經看過一名同學在 Eclipse 上用快捷鍵用得嚇嚇叫，讓我十分佩服，雖然最後他被當了。&lt;/p&gt;
&lt;p&gt;工作之後開始使用 Mac 跟 &lt;a href=&quot;https://www.sublimetext.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime Text&lt;/a&gt;，在開發 web 挺方便，缺點是在 Linux 底下無法打中文，不管打什麼補丁、用什麼方法都不管用，不過當時也沒有比較好的替代品，所以在 Linux 底下還是只能將就。之後 &lt;a href=&quot;https://atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Atom&lt;/a&gt; 推出 Beta 測試，不算上他用起來像 Alpha 這件事，光是能好好打中文就謝天謝地了，在推出測試之後就立馬換上。再之後推出正式版時，&lt;a href=&quot;https://code.visualstudio.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Visual Studio Code&lt;/a&gt; 推出了，這編輯器在使用上感覺比 &lt;a href=&quot;https://atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Atom&lt;/a&gt; 舒服不少，所以在試用一陣子之後就又換了。將來會不會又想跳哪個編輯器我也不知道，不過 &lt;a href=&quot;http://spacemacs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Spacemacs&lt;/a&gt; 頗讓我感興趣的，前題是我有沒有心想記那一堆快捷鍵…&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/hTIXoZe.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;硬體支援&quot;&gt;&lt;a href=&quot;#硬體支援&quot; class=&quot;headerlink&quot; title=&quot;硬體支援&quot;&gt;&lt;/a&gt;硬體支援&lt;/h2&gt;&lt;p&gt;顯卡就是挑 NVIDIA，驅動在 Linux 上的支援度比 AMD 好太多太多了。一些小東西比如無線網卡之類的，不要挑功能太多或看起來好像很高檔的，不然就算有幸找到支援的驅動，在抓取硬體時很可能也會是這次有抓到，但下次就不一定了。&lt;/p&gt;
&lt;h2 id=&quot;軟體&quot;&gt;&lt;a href=&quot;#軟體&quot; class=&quot;headerlink&quot; title=&quot;軟體&quot;&gt;&lt;/a&gt;軟體&lt;/h2&gt;&lt;p&gt;如同 Gnome 與 KDE 之爭一樣，軟體開發的 GUI Library 也是以 GTK 跟 Qt 為主流，少部份會用 Tcl/Tk 之類的東西。不過不論是用哪種 Library，最困難的一點莫過於跨平台這件事，基本上有跨平台又好用的軟體少之又少，而在跨平台之中，每個都能有一樣的使用體驗更是難上加難。&lt;/p&gt;
&lt;p&gt;一些像 &lt;a href=&quot;https://krita.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Krita&lt;/a&gt;、&lt;a href=&quot;https://www.blender.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Blender&lt;/a&gt; 跟 &lt;a href=&quot;https://zh-tw.libreoffice.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LibreOffice&lt;/a&gt; 之類的軟體都能在三個作業系統上有不錯的體驗，而 &lt;a href=&quot;https://www.gimp.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GIMP&lt;/a&gt;、&lt;a href=&quot;http://mypaint.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MyPaint&lt;/a&gt; 在 Windows 及 Mac 平台上有時會因為編譯問題而延遲發佈，穩定性也稍微低一點，至於 &lt;a href=&quot;https://inkscape.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Inkscape&lt;/a&gt;…他連在 Linux 上都不一定穩定了。誠心建議，如果想在非 Linux 平台使用 &lt;a href=&quot;https://www.gimp.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GIMP&lt;/a&gt; 跟 &lt;a href=&quot;https://inkscape.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Inkscape&lt;/a&gt; 的話，可到&lt;a href=&quot;http://www.partha.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;這個網站&lt;/a&gt;下載另外編譯打包好的版本，執行起來相對穩定許多。&lt;/p&gt;
&lt;p&gt;而有些企業會突然宣佈產品支援 Linux，比如 &lt;a href=&quot;http://www.xaraxtreme.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Xara Xtreme&lt;/a&gt;，在宣佈支援的時候可是歡騰了一小陣子，畢竟除了 &lt;a href=&quot;https://inkscape.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Inkscape&lt;/a&gt; 外沒有什麼強大的替代品可供挑選，然而在更新幾個小版本後就已經沒有任何維護了；要不然就是像 &lt;a href=&quot;https://www.foxitsoftware.com/products/pdf-reader/comparison.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Foxit Reader&lt;/a&gt; 那樣，維持最低限度的更新。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://downloads.xara.com/opensource/images/screenshots/technical/05.jpg&quot; alt=&quot;圖片來源：Xara Xtreme&quot;&gt;&lt;/p&gt;
&lt;p&gt;在這幾年裡，&lt;a href=&quot;http://electron.atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Electron&lt;/a&gt; 開始流行，很多服務開始用「包著網頁當軟體」的方式來實現跨平台，如果打一開始就這樣推出的話到不是什麼問題，但如果是中途變更可能反而會造成反效果。&lt;/p&gt;
&lt;p&gt;比如像 Linux 上的 Skype，簡直就像是半個僵屍一般，在 Linux 上破破爛爛的，當 Windows 跟 Mac 都換上新介面的時候，只有 Linux 版在被收購那一陣子換上微軟大大所有、加上微軟帳號登入後就不再有任何更新，不論官方論壇上的人有多憤怒，聽不到就是聽不到。&lt;/p&gt;
&lt;p&gt;然而前幾天微軟突然發佈一個好消息，宣佈 Linux Skype 版重新製作的 Alpha 版測試，這基本上就是個大消息，之前在他表面上說自己有多麼積極擁抱 Linux 的時候，Linux 版的 Skype 默默的躺在一邊啜泣，而現在卻又重獲關注，多麼棒的消息！&lt;/p&gt;
&lt;p&gt;Skype 的 GUI 是基於 Qt，但是在裝上 Alpha 版之後發現，怎麼捨棄了 Qt 用上 GTK 了？打開後的直覺是這應該是 &lt;a href=&quot;http://electron.atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Electron&lt;/a&gt; 打包的（&lt;a href=&quot;http://electron.atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Electron&lt;/a&gt; 基於 Chromium，Chromium 基於 GTK），Reddit 以及一些文章也有提到這件事；雖然 &lt;a href=&quot;https://code.visualstudio.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Visual Studio Code&lt;/a&gt; 也是 &lt;a href=&quot;http://electron.atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Electron&lt;/a&gt; 打包的，用起來也不錯，但 Skype 這種作法實在是太忽悠人，畢竟有四五年沒有任何更新。尤其在這之前已經有許多人嘗試用這種方式打包網頁版了，其中有些運作得還不錯，微軟真的沒有直接拿別人的程式碼來改？再一次，微軟又讓人失望了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/stanfieldr/ghetto-skype/develop/assets/screenshot.png&quot; alt=&quot;Ghetto Skype, base on Electron（人家還可以選佈景勒）&quot;&gt;&lt;/p&gt;
&lt;p&gt;很多時候，在 Linux 上使用軟體真的覺得自己像個次等公民一樣，但現在 web 技術愈來愈發達，很多東西已經都是改在網頁上完成，所以這個隔閡就顯得比較不那麼嚴重了（但微軟還是該死）。&lt;/p&gt;
&lt;h2 id=&quot;遊戲&quot;&gt;&lt;a href=&quot;#遊戲&quot; class=&quot;headerlink&quot; title=&quot;遊戲&quot;&gt;&lt;/a&gt;遊戲&lt;/h2&gt;&lt;p&gt;拜 DOOM 系列遊戲 Open Source 所賜，以前 Linux 上 3D 大型遊戲裡佔絕大多數的就是 FPS 類遊戲，其他的就是一些像 &lt;a href=&quot;https://supertux.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SuperTux&lt;/a&gt; 之類的 2D 小遊戲，沒有什麼能夠提起興趣的，主要還是開 Windows 打魔獸三國之類的遊戲。&lt;/p&gt;
&lt;p&gt;後來 HoN 推出，第一款不用魔獸三就能獨立執行的 Dota 類遊戲，而且還支援 Linux，在玩過幾次之後就慫恿朋友也跟著跳坑，但無奈官方希望能夠用收費的方式經營，在一年多的免費暢玩後，在收費的第一天，人氣直跌谷底，分別回流到原本的魔獸與那時剛推出不久的 &lt;a href=&quot;http://na.leagueoflegends.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LoL&lt;/a&gt;，過幾年後 &lt;a href=&quot;http://blog.dota2.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Dota2&lt;/a&gt; 推出，我也就這樣轉戰過去了。幾年之後，&lt;a href=&quot;http://www.heroesofnewerth.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HoN&lt;/a&gt; 默默改回免費模式，但已不再吸引人了。&lt;/p&gt;
&lt;p&gt;之後開始工作時，玩的遊戲也變少了，通常都是周末時才會開 Windows 打一下 &lt;a href=&quot;https://www.pathofexile.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PoE&lt;/a&gt; 或 &lt;a href=&quot;http://blog.dota2.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Dota2&lt;/a&gt;，當時我跟我朋友開玩笑說：「如果兩款其中一款出了 Linux 版，那我大概就不會再切到 Windows 了」。在大約又快一年之後，&lt;a href=&quot;http://www.valvesoftware.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Valve&lt;/a&gt; 開始全力推廣 Linux 遊戲，首先就將 &lt;a href=&quot;http://blog.dota2.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Dota2&lt;/a&gt; 與 &lt;a href=&quot;http://blog.counter-strike.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CS:GO&lt;/a&gt; 等旗下遊戲轉移到 Linux 上，從那時起，我自己的電腦就再也沒開過 Windows。&lt;/p&gt;
&lt;p&gt;時至今日，Steam 上面的 Linux 遊戲愈來愈多，個人的收藏庫裡有過半是有支援 Linux，之後有空再來考慮怎麼玩那些 Windows 的遊戲。&lt;/p&gt;
&lt;p&gt;以下是我遊戲收藏庫裡支援 Linux 的部份：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://c1.staticflickr.com/9/8741/28329841256_825459734b_o.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://c1.staticflickr.com/9/8364/28080825700_0741b46b63_o.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://c1.staticflickr.com/9/8477/27747748883_313829fc31_o.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://c1.staticflickr.com/9/8675/28080900750_a1dfe9c7da_o.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;最後說一點-Mac&quot;&gt;&lt;a href=&quot;#最後說一點-Mac&quot; class=&quot;headerlink&quot; title=&quot;最後說一點 Mac&quot;&gt;&lt;/a&gt;最後說一點 Mac&lt;/h2&gt;&lt;p&gt;雖說是因為工作需求而買了 Macbook Pro，但那時對 Mac 實在沒有什麼感覺，只是覺得「有一天應該會需要用 XCode 寫 APP 吧」，所以對當時的我來說，就像是花了幾萬塊買了 XCode，但卻從來沒用過的感覺。&lt;/p&gt;
&lt;p&gt;用了幾年基本上除了覺得觸控版做得很棒之外，真的沒有什麼很特別的評價，不討厭也沒特別喜歡。不過上面的軟體倒是有不少挺喜歡的，比如 &lt;a href=&quot;https://www.sketchapp.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sketch&lt;/a&gt;、&lt;a href=&quot;https://affinity.serif.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Affinity Designer&lt;/a&gt; 等等，如果往後要說我為什麼會用 Mac 的話，大概會是因為上面有我喜歡的軟體吧（有 Linux 版我會很願意再花一次錢…，前提是功能要能完整體驗）。&lt;/p&gt;
&lt;h2 id=&quot;結論&quot;&gt;&lt;a href=&quot;#結論&quot; class=&quot;headerlink&quot; title=&quot;結論&quot;&gt;&lt;/a&gt;結論&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;感謝 Vista 讓我人生不一樣，其次是 Ubuntu（？&lt;/li&gt;
&lt;li&gt;Windows 上可以互相取代的軟體非常多，如果有人又在拿 &lt;a href=&quot;https://www.gimp.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GIMP&lt;/a&gt; 之類的說你或許不需要用 PS 云云，我建議你不妨先試試例如 &lt;a href=&quot;http://www.getpaint.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Paint.NET&lt;/a&gt; 之類的替代方案，或是上 &lt;a href=&quot;http://alternativeto.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AlternativeTo&lt;/a&gt; 找找看。&lt;/li&gt;
&lt;li&gt;真的想用 &lt;a href=&quot;https://www.gimp.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GIMP&lt;/a&gt; 或 &lt;a href=&quot;https://inkscape.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Inkscape&lt;/a&gt; 的話，&lt;a href=&quot;http://www.partha.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;這個網站&lt;/a&gt;編譯打包的比較穩定。&lt;/li&gt;
&lt;li&gt;Linux 推廣勸世文看看就好。&lt;/li&gt;
&lt;li&gt;真的被勸成了也別挑 Ubuntu，挑 &lt;a href=&quot;https://www.linuxmint.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linux Mint&lt;/a&gt; 之類的 Ubuntu 衍生版比較穩定。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      紀錄我這幾年來，持續使用 Linux 當作一般作業系統的感想，文章以作業系統、桌面環境、開發環境、硬體支援、軟體、遊戲為大分類去做說明。
    
    </summary>
    
    
      <category term="Linux" scheme="https://notes.knovour.ninja/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>React/Redux 一個月的開發感想</title>
    <link href="https://notes.knovour.ninja/2016/05/23/my-experience-about-react-redux-in-one-month/"/>
    <id>https://notes.knovour.ninja/2016/05/23/my-experience-about-react-redux-in-one-month/</id>
    <published>2016-05-23T12:05:22.000Z</published>
    <updated>2016-05-24T00:20:09.870Z</updated>
    
    <content type="html">&lt;p&gt;之前自學 &lt;a href=&quot;https://facebook.github.io/react/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React&lt;/a&gt; 時寫了一個簡單的線上簡歷，而我也確實靠他加分而拿到了工作，之後進去也是開始用 &lt;a href=&quot;https://facebook.github.io/react/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React&lt;/a&gt; 建立頁面，之後加上了 &lt;a href=&quot;http://redux.js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Redux&lt;/a&gt;；雖然這兩個總天數加起來大概就一個月，不敢說自己有摸清這些東西，不過還是就開發經驗來寫一些感想。&lt;/p&gt;
&lt;h2 id=&quot;先講結論&quot;&gt;&lt;a href=&quot;#先講結論&quot; class=&quot;headerlink&quot; title=&quot;先講結論&quot;&gt;&lt;/a&gt;先講結論&lt;/h2&gt;&lt;p&gt;對 &lt;a href=&quot;https://facebook.github.io/react/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React&lt;/a&gt; 其實不討厭，還算是喜歡的；但若是要我向別人推荐的話，我會建議學 &lt;a href=&quot;https://vuejs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Vue.js&lt;/a&gt; 入門，熟了再考慮要不要碰 &lt;a href=&quot;https://facebook.github.io/react/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React&lt;/a&gt;。若是不排斥用其他語言轉換成 js 的話，&lt;a href=&quot;http://elm-lang.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Elm&lt;/a&gt; 看起來是個不錯的選擇，但 ES6 開始普及之後我對這方面的興趣不大，所以這個建議比較不負責任一點。&lt;/p&gt;
&lt;p&gt;摸新東西當然都會面臨挫折、觀念轉變以及學習曲線的問題，但事實上，不把前後分離這件事考慮進去的話（畢竟這是前端 framework 最主要的目的），失去的不會比獲得的感受來的少多少，頂多接近打平，剩下的端看你的 M 體質點多高來去彌補。說實在的，當初把玩 &lt;a href=&quot;https://www.rust-lang.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Rust&lt;/a&gt; 語言被摧殘到躺地板時我覺得還比較爽一點。&lt;/p&gt;
&lt;h2 id=&quot;簡介&quot;&gt;&lt;a href=&quot;#簡介&quot; class=&quot;headerlink&quot; title=&quot;簡介&quot;&gt;&lt;/a&gt;簡介&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/react/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React&lt;/a&gt; 是以函數式編程為原則來做開發，函數式編程幾個簡單的重點如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;數值不可變&lt;/strong&gt;：在一些比較嚴格規定的語言如 &lt;a href=&quot;https://www.haskell.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Haskell&lt;/a&gt; 的每個變數都是強制不可變的，而大部分的語言都是折衷分為可變與不可變。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;一個函數只做一件事&lt;/strong&gt;：這表示函數要單純，所以要把處理的事情分的很清楚，對不是從函數式語言入門的人來說，要分多清楚端看過往寫程式的經驗以及潔癖程度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;每次回傳都是一筆新的資料&lt;/strong&gt;：基於數值不可變的特性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;一樣的參數 =&amp;gt; 一樣的結果&lt;/strong&gt;：這點也包括不該改變參數原本的值，比如 &lt;code&gt;slice&lt;/code&gt; 與 &lt;code&gt;splice&lt;/code&gt; 這兩個函數都能夠回傳一個陣列指定範圍的切片，但 &lt;code&gt;splice&lt;/code&gt; 不屬於純函數。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; fruits = [&lt;span class=&quot;string&quot;&gt;&#39;Banana&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Orange&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Lemon&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Apple&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Mango&#39;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 純函數&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fruits.slice(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;// [&quot;Orange&quot;, &quot;Lemon&quot;]&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fruits.slice(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;// [&quot;Orange&quot;, &quot;Lemon&quot;]&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fruits.slice(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;// [&quot;Orange&quot;, &quot;Lemon&quot;]&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(fruits); &lt;span class=&quot;comment&quot;&gt;// [&#39;Banana&#39;, &#39;Orange&#39;, &#39;Lemon&#39;, &#39;Apple&#39;, &#39;Mango&#39;]&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 非純函數&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fruits.splice(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;// [&quot;Orange&quot;, &quot;Lemon&quot;, &quot;Apple&quot;]&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(fruits);  &lt;span class=&quot;comment&quot;&gt;// [&quot;Banana&quot;, &quot;Mango&quot;]&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fruits.splice(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;// [&quot;Mango&quot;]&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(fruits);  &lt;span class=&quot;comment&quot;&gt;// [&quot;Banana&quot;]&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fruits.splice(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;// []&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這會帶來什麼好處？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;耦合度低&lt;/strong&gt;：每個函數都很單純，程式碼簡短（通常）。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;容易測試&lt;/strong&gt;：沒有副作用，傳入與傳出的結果是可預測的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;效率&lt;/strong&gt;：有一個叫 &lt;a href=&quot;https://github.com/omcljs/om&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Om&lt;/a&gt; 的項目，是以 &lt;a href=&quot;https://github.com/clojure/clojurescript&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ClojureScript&lt;/a&gt; 來寫 &lt;a href=&quot;https://facebook.github.io/react/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React&lt;/a&gt; 再轉成純 js，轉換後發現執行效率比用純 js 編寫高出了三倍，其中數值不可變是比較大的主因，促使 &lt;a href=&quot;https://facebook.github.io/react/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React&lt;/a&gt; 官方寫了 &lt;a href=&quot;https://facebook.github.io/immutable-js/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Immutable.js&lt;/a&gt; 以達成一樣的結果。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;入門&quot;&gt;&lt;a href=&quot;#入門&quot; class=&quot;headerlink&quot; title=&quot;入門&quot;&gt;&lt;/a&gt;入門&lt;/h2&gt;&lt;p&gt;入門不算困難，只要知道兩個資料夾的分工、怎麼組合起來，你就入門了。&lt;/p&gt;
&lt;h4 id=&quot;components&quot;&gt;&lt;a href=&quot;#components&quot; class=&quot;headerlink&quot; title=&quot;components&quot;&gt;&lt;/a&gt;components&lt;/h4&gt;&lt;p&gt;存放網頁單一元素的地方，比如按鈕、表單、卡片等會重複使用到的東西，程式碼會儘量保持簡單乾淨。&lt;/p&gt;
&lt;figure class=&quot;highlight jsx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Section.jsx&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Section&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;React&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  render() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;className&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;section&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;this.props.children&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Header.jsx&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Header&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;React&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  render() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;header&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;this.props.title&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;header&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    );&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Description.jsx&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Description&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;React&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  render() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;this.props.text&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;containers&quot;&gt;&lt;a href=&quot;#containers&quot; class=&quot;headerlink&quot; title=&quot;containers&quot;&gt;&lt;/a&gt;containers&lt;/h4&gt;&lt;p&gt;載入各個 component 組合出一個頁面、進行數據傳遞以及一些事件綁定的函式建立等等，簡單講就是骯髒事儘量先在這邊處理再傳遞到各個 component。&lt;/p&gt;
&lt;figure class=&quot;highlight jsx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// App.jsx&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;React&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  render() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;lt;Section&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;Header title=&quot;Title&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;Description text=&quot;blablabla&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;lt;/Section&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    );&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最終會生成這段 html：&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;section&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;header&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Title&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;header&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;blablabla&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;section&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;清楚明瞭是我剛入門時的第一個看法，尤其 jsx 的排法令人覺得賞心悅目，搭配 &lt;a href=&quot;http://rscss.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rscss&lt;/a&gt; 似乎會是個不錯的選擇。&lt;/p&gt;
&lt;h2 id=&quot;入門之後？&quot;&gt;&lt;a href=&quot;#入門之後？&quot; class=&quot;headerlink&quot; title=&quot;入門之後？&quot;&gt;&lt;/a&gt;入門之後？&lt;/h2&gt;&lt;p&gt;js 基於結構靈活（鬆散）的特性、越來越多的 libraries、frameworks 以及往網頁以外的領域發展的趨勢，使之成為一門易學難精的語言。而 &lt;a href=&quot;https://facebook.github.io/react/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React&lt;/a&gt; 本身對於以往的開發方式與概念是完全截然不同的，加上 ES6 語法、Webpack、BABEL、npm script 等等東西幾乎是要一起摸索，而在你摸索期間發現，網路上用上 ES7 當作範例的情況愈來愈多，對於初學在尋求幫助上，無異於徒增困擾。&lt;/p&gt;
&lt;p&gt;隨著項目稍微變大、程式碼變多時，另一個問題就浮現了（至少我覺得困擾），一份 &lt;a href=&quot;https://facebook.github.io/react/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React&lt;/a&gt; 程式碼（尤其是 containers 資料夾底下的）通常是一份混雜著 js + jsx + html 語法的檔案，必要時還會加點 css，理想狀況是 jsx 將 html 包成一個個 component 再組合，使用起來比純 html 要來的賞心悅目，但 jsx 本身混雜的大括號一多，甚至不得已混了一點純 html 標籤進去時，那一段就會變成一個看起來非常雜亂的區塊，進而讓整份程式碼看起來更加凌亂。&lt;/p&gt;
&lt;figure class=&quot;highlight jsx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// App.jsx&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;React&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;constructor&lt;/span&gt;() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.state = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      hideAlert: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      hideModal: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.openModal = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.openModal.bind(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.closeModal = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.closeModal.bind(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  openModal() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.setState(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      hideModal: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  closeModal() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.setState(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      hideModal: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  render() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; links = [&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      href: &lt;span class=&quot;string&quot;&gt;&#39;#&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      text: &lt;span class=&quot;string&quot;&gt;&#39;Link1&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;, &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      href: &lt;span class=&quot;string&quot;&gt;&#39;#&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      text: &lt;span class=&quot;string&quot;&gt;&#39;Link2&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;lt;Main&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;Nav&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;#123;links.map((&amp;#123; href, text &amp;#125;, i) =&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;lt;Link key=&amp;#123;i&amp;#125; href=&amp;#123;href&amp;#125; text=&amp;#123;text&amp;#125; /&amp;gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          )&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;/Nav&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;Section&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;lt;Header title=&quot;Title&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;lt;Content&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;lt;Description text=&quot;blablabla&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;lt;Button primary onClick=&amp;#123;this.openModal&amp;#125; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;lt;/Content&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;lt;Alert hide=&amp;#123;this.state.hideAlert&amp;#125; text=&quot;You Idiot!!&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;/Section&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;Modal hide=&amp;#123;this.state.hideModal&amp;#125; header=&quot;Modal Header&quot; description=&quot;blablabla&quot; onClose=&amp;#123;this.closeModal&amp;#125; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;lt;/Main&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    );&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;隨著鼓吹將 css 直接套進 jsx 的解決方案愈來愈多，無論你自己本身願不願意這樣寫，未來都將面臨看到愈來愈多將 css 硬塞進去的程式碼（事實上已經開始了），而你勢必得習慣他。&lt;/p&gt;
&lt;p&gt;但這也不是沒有好處，以往載入如 &lt;a href=&quot;http://getbootstrap.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bootstrap&lt;/a&gt; 等的 framework 時，如果不考慮直接修改原始碼來改變樣式的話，很常需要另外寫 css 來覆蓋原本的設計，必要時還得補上 &lt;code&gt;!important&lt;/code&gt;，如果用上如 &lt;a href=&quot;http://semantic-ui.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Semantic UI&lt;/a&gt; 這種小元件很多又彼此有關聯的，那就有如一場災難。&lt;/p&gt;
&lt;p&gt;jsx 裡的 css 以 JSON 格式儲存，如果想改變或新增部份的 &lt;a href=&quot;http://www.material-ui.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Material-UI&lt;/a&gt; 裡的 css，只要寫進參數就可以直接替換。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;當然，這所謂的「好處」是建立在你用的東西是這樣幹的時候。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Redux&quot;&gt;&lt;a href=&quot;#Redux&quot; class=&quot;headerlink&quot; title=&quot;Redux&quot;&gt;&lt;/a&gt;Redux&lt;/h2&gt;&lt;p&gt;引入了 &lt;a href=&quot;http://redux.js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Redux&lt;/a&gt; 之後，以往用 jQuery 的事件處理變成資料流的方式進行，其實我還滿喜歡這個概念的，但實際運用時卻是有點令人煩躁。&lt;/p&gt;
&lt;h4 id=&quot;觀念方面&quot;&gt;&lt;a href=&quot;#觀念方面&quot; class=&quot;headerlink&quot; title=&quot;觀念方面&quot;&gt;&lt;/a&gt;觀念方面&lt;/h4&gt;&lt;p&gt;在一開始時，我還在摸索 &lt;a href=&quot;https://facebook.github.io/react/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React&lt;/a&gt;，所以對於 Flux/Redux 的技術只有看看文章而已，或許是我資質駑鈍，但這些文章跟圖說實在很難在我腦中建立關聯，在我摸索了幾個簡單的 &lt;a href=&quot;http://redux.js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Redux&lt;/a&gt; 官方範例好一陣子後，我才慢慢有個概念出來。&lt;/p&gt;
&lt;h4 id=&quot;操作方面&quot;&gt;&lt;a href=&quot;#操作方面&quot; class=&quot;headerlink&quot; title=&quot;操作方面&quot;&gt;&lt;/a&gt;操作方面&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://redux.js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Redux&lt;/a&gt; 引入之後，在原本的兩個資料夾為基礎新增了 &lt;code&gt;actions&lt;/code&gt;、&lt;code&gt;reducers&lt;/code&gt;、&lt;code&gt;store&lt;/code&gt; 三個資料夾，而新增一個按鈕事件時，流程是這樣的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 reducers 的 &lt;code&gt;button.js&lt;/code&gt; 新增一個事件常數（比如 &lt;code&gt;CLICK&lt;/code&gt;）進 switch case 裡。&lt;/li&gt;
&lt;li&gt;在 actions 的 &lt;code&gt;button.js&lt;/code&gt; 新增一個函數（比如 &lt;code&gt;click()&lt;/code&gt;），負責傳遞這個常數以及資料過去給 reducer。&lt;/li&gt;
&lt;li&gt;在 container 裡把 actions 裡的函數引進來，再傳給 Button component 做事件綁定。&lt;/li&gt;
&lt;li&gt;Button component 接收到這個函數後，綁定在 DOM 事件上。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;為了新增一個事件，一個沒有要幹什麼大事的事件，我得跑過四個資料夾才算完成！！&lt;/p&gt;
&lt;h4 id=&quot;middlewares&quot;&gt;&lt;a href=&quot;#middlewares&quot; class=&quot;headerlink&quot; title=&quot;middlewares&quot;&gt;&lt;/a&gt;middlewares&lt;/h4&gt;&lt;p&gt;由於我是第一次使用 Redux，所以我決定不要任意引入額外的 middlewares，以了解 &lt;a href=&quot;http://redux.js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Redux&lt;/a&gt; 最原本的使用方式，但我還是去翻了翻一些網路範例常用的 middlewares，而這些 middlewares 常讓我有一個疑問（那感覺我也說不上來），他們到底是「解決方案」？還是「折衷方案」？抑或只是「虛幌一招」（看起來好像很厲害）？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;這恐怕只有在往後實際用上時才能體會了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;共通的問題&quot;&gt;&lt;a href=&quot;#共通的問題&quot; class=&quot;headerlink&quot; title=&quot;共通的問題&quot;&gt;&lt;/a&gt;共通的問題&lt;/h2&gt;&lt;h4 id=&quot;重複的工作太多&quot;&gt;&lt;a href=&quot;#重複的工作太多&quot; class=&quot;headerlink&quot; title=&quot;重複的工作太多&quot;&gt;&lt;/a&gt;重複的工作太多&lt;/h4&gt;&lt;p&gt;每建立一個 &lt;a href=&quot;https://facebook.github.io/react/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React&lt;/a&gt; 檔案，就得先補上以下的程式碼：&lt;/p&gt;
&lt;figure class=&quot;highlight jsx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; React, &amp;#123; Component &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;react&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  render() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// return jsx or html;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; App;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;而 &lt;a href=&quot;http://redux.js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Redux&lt;/a&gt; 除了上面講的新增事件的困擾以外，如果是得多新增檔案，那也得補上跟其他檔案一樣的東西，縱使有 &lt;a href=&quot;https://github.com/acdlite/redux-actions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;redux-actions&lt;/a&gt; 之類的 middleware 改善，但也僅僅是就那麼點改善，這到底是「解決方案」？還是「折衷方案」？&lt;/p&gt;
&lt;h2 id=&quot;學習與開發重點&quot;&gt;&lt;a href=&quot;#學習與開發重點&quot; class=&quot;headerlink&quot; title=&quot;學習與開發重點&quot;&gt;&lt;/a&gt;學習與開發重點&lt;/h2&gt;&lt;h4 id=&quot;ES6&quot;&gt;&lt;a href=&quot;#ES6&quot; class=&quot;headerlink&quot; title=&quot;ES6&quot;&gt;&lt;/a&gt;ES6&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/airbnb/javascript&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Airbnb JavaScript Style Guide&lt;/a&gt; 可以當成一個不錯的 ES6 入門文件，之後再閱讀 &lt;a href=&quot;http://es6.ruanyifeng.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ECMAScript 6 入门&lt;/a&gt;做更進一步的了解。&lt;/p&gt;
&lt;h4 id=&quot;React&quot;&gt;&lt;a href=&quot;#React&quot; class=&quot;headerlink&quot; title=&quot;React&quot;&gt;&lt;/a&gt;React&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;能用 css 解決的就用 css。&lt;/li&gt;
&lt;li&gt;能用 Virtual DOM 解決的就不要用原生操作。&lt;/li&gt;
&lt;li&gt;Say goodbye to jQuery.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/airbnb/javascript/tree/master/react&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Airbnb React/JSX Style Guide&lt;/a&gt; 在 &lt;a href=&quot;https://facebook.github.io/react/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React&lt;/a&gt; 稍微懂一些後可以參考看看。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React&lt;/a&gt; 大部分的 plugins 程式碼都不多，使用前不妨看一下原始碼，或許你只需要擷取出一部份，不用再多載一個就能自己實現。&lt;/li&gt;
&lt;li&gt;ES6 的 class 只做了半套，在有一定程度了解後，ES7 不妨給他用下去。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;舉個簡單的例子，React 有 PropTypes 可以檢測傳進來的參數是否有錯誤，ES6 的寫法是這樣：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Modal&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;React&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  render() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ......&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Modal.propTypes = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  hide:        React.PropTypes.bool.isRequired,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  header:      React.PropTypes.string.isRequired,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  description: React.PropTypes.string.isRequired,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  onClose:     React.PropTypes.func.isRequired&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ES7：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Modal&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;React&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; propTypes = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    hide:        React.PropTypes.bool.isRequired,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    header:      React.PropTypes.string.isRequired,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    description: React.PropTypes.string.isRequired,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    onClose:     React.PropTypes.func.isRequired&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  render() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ......&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Redux-1&quot;&gt;&lt;a href=&quot;#Redux-1&quot; class=&quot;headerlink&quot; title=&quot;Redux&quot;&gt;&lt;/a&gt;Redux&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;如果只是改變 component 自身狀態，不要考慮用。&lt;/li&gt;
&lt;li&gt;跨 component 的事件處理如果數量不多，可以考慮不用。&lt;/li&gt;
&lt;li&gt;第一次用建議不要用太多額外的 middlewares，先知道基本用法是怎樣，之後再去考慮這件事。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;後記&quot;&gt;&lt;a href=&quot;#後記&quot; class=&quot;headerlink&quot; title=&quot;後記&quot;&gt;&lt;/a&gt;後記&lt;/h2&gt;&lt;p&gt;其他前端 framework 除了 ES6/ES7、Webpack 等等要學之外有沒有各自的狀況？我想是有的，但在討論學習曲線這件事時，我想不會有像 Twitter 上這樣的&lt;a href=&quot;https://twitter.com/floydophone/status/680226147213426688&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;回應&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;就像前面說的，js 是個易學難精的語言，配上 &lt;a href=&quot;https://facebook.github.io/react/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React&lt;/a&gt; 不一樣的觀念以及整個生態後，無異於更多麻煩。但目前已決定在 &lt;a href=&quot;https://facebook.github.io/react/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React&lt;/a&gt; 上暫且繼續做下去，對其它流行的前端框架目前興趣不大，也沒有切換的打算。&lt;/p&gt;
&lt;p&gt;但我想我之後下個階段會研究 &lt;a href=&quot;https://github.com/Reactive-Extensions/RxJS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RxJS&lt;/a&gt; 與 &lt;a href=&quot;http://cycle.js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cycle.js&lt;/a&gt; 吧，其中 &lt;a href=&quot;http://cycle.js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cycle.js&lt;/a&gt; 與 &lt;a href=&quot;http://redux.js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Redux&lt;/a&gt; 都有從 &lt;a href=&quot;http://elm-lang.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Elm&lt;/a&gt; 語言尋求靈感，所以 &lt;a href=&quot;http://elm-lang.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Elm&lt;/a&gt; 或許也會成為一個考慮選項也說不定。&lt;/p&gt;
&lt;h2 id=&quot;延伸閱讀&quot;&gt;&lt;a href=&quot;#延伸閱讀&quot; class=&quot;headerlink&quot; title=&quot;延伸閱讀&quot;&gt;&lt;/a&gt;延伸閱讀&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ruby-china.org/topics/29901&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2016 年后 Web 开发趋势是什么&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pymaster.logdown.com/post/435999-react-nagging-tough-new-road&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React 碎碎念: 艱困的新手之路&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://react-china.org/t/redux/2687&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这段时间研究了下Redux，写写自己对它的感觉&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;線上課程&quot;&gt;&lt;a href=&quot;#線上課程&quot; class=&quot;headerlink&quot; title=&quot;線上課程&quot;&gt;&lt;/a&gt;線上課程&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.reactjsprogram.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React.js Program&lt;/a&gt;：React 線上教學，其中 &lt;strong&gt;React.js Fundamentals&lt;/strong&gt; 這個入門課程是免費的，推荐。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://egghead.io/series/getting-started-with-redux&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Getting Started with Redux&lt;/a&gt;：Redux 入門課程。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;首圖來源&quot;&gt;&lt;a href=&quot;#首圖來源&quot; class=&quot;headerlink&quot; title=&quot;首圖來源&quot;&gt;&lt;/a&gt;首圖來源&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://react-redux.herokuapp.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Redux Example&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      之前自學 React 時寫了一個簡單的線上簡歷，而我也確實靠他加分而拿到了工作，之後進去也是開始用 [React] 建立頁面，之後加上了 Redux；雖然這兩個總天數加起來大概就一個月，不敢說自己有摸清這些東西，不過還是就開發經驗來寫一些感想。
    
    </summary>
    
    
      <category term="react.js" scheme="https://notes.knovour.ninja/tags/react-js/"/>
    
      <category term="redux" scheme="https://notes.knovour.ninja/tags/redux/"/>
    
  </entry>
  
  <entry>
    <title>收到 Docker Beta 的通知信了！</title>
    <link href="https://notes.knovour.ninja/2016/05/08/docker-beta/"/>
    <id>https://notes.knovour.ninja/2016/05/08/docker-beta/</id>
    <published>2016-05-08T03:52:01.000Z</published>
    <updated>2016-05-08T04:50:10.428Z</updated>
    
    <content type="html">&lt;p&gt;前兩天終於收到 Docker Beta for Mac 的通知信了，這次的 Docker Beta 在 Mac 和 Windows 底下擺脫了 VirtualBox 的依賴，並且在 Unikernel 技術的加持下，未來每個 container 只會留下需要的部份，打包成最小化的獨立作業系統。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://farm8.staticflickr.com/7745/26881682915_ee03a23196_o.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;以後找個時間試試看用 &lt;a href=&quot;http://rancher.com/rancher-os/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RancherOS&lt;/a&gt; 或 &lt;a href=&quot;https://www.weave.works/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Weave&lt;/a&gt; 來組織 MicroService 好了。&lt;/p&gt;
&lt;h2 id=&quot;延伸閱讀&quot;&gt;&lt;a href=&quot;#延伸閱讀&quot; class=&quot;headerlink&quot; title=&quot;延伸閱讀&quot;&gt;&lt;/a&gt;延伸閱讀&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dockone.io/article/855&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;到底什么是 Unikernel？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;前兩天終於收到 Docker Beta for Mac 的通知信了，這次的 Docker Beta 在 Mac 和 Windows 底下擺脫了 VirtualBox 的依賴，並且在 Unikernel 技術的加持下，未來每個 container 只會留下需要的部份，打包成最
    
    </summary>
    
    
      <category term="docker" scheme="https://notes.knovour.ninja/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>React.js 筆記 - Flux 的個人理解</title>
    <link href="https://notes.knovour.ninja/2016/05/02/react-flux-short-explain/"/>
    <id>https://notes.knovour.ninja/2016/05/02/react-flux-short-explain/</id>
    <published>2016-05-01T18:01:07.000Z</published>
    <updated>2016-05-02T11:10:24.019Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/react/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React.js&lt;/a&gt; 的 &lt;a href=&quot;https://facebook.github.io/flux/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Flux&lt;/a&gt; 的部份我看了好久還是不太能理解他的意思，這幾天總算理出點頭緒（雖然不知道對不對…），在這邊做一點紀錄。&lt;/p&gt;
&lt;h2 id=&quot;簡單介紹&quot;&gt;&lt;a href=&quot;#簡單介紹&quot; class=&quot;headerlink&quot; title=&quot;簡單介紹&quot;&gt;&lt;/a&gt;簡單介紹&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/flux/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Flux&lt;/a&gt; 算是一套前端的處理流程，一般的講法就是前端版的 MVC，主要分四大部份：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Action: 事件觸發或是跟後端溝通後，發送資料給 Dispatcher。&lt;/li&gt;
&lt;li&gt;Dispatcher: 根據資料內容，分派至對應的函式做處理（通常是參照資料裡面的一個 &lt;code&gt;type&lt;/code&gt; 屬性）。&lt;/li&gt;
&lt;li&gt;Store: 儲存負責處理資料的函式，向 Dispatcher 註冊後，再由 Dispatcher 負責分發。&lt;/li&gt;
&lt;li&gt;View: 接收處理後的結果並更新頁面。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這邊所指的資料在 &lt;a href=&quot;https://facebook.github.io/react/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React.js&lt;/a&gt; 裡叫作 &lt;code&gt;state&lt;/code&gt;，當 &lt;code&gt;state&lt;/code&gt; 更新之後 View 就會對頁面做相對應的更新。&lt;/p&gt;
&lt;h2 id=&quot;用-jQuery-當範例&quot;&gt;&lt;a href=&quot;#用-jQuery-當範例&quot; class=&quot;headerlink&quot; title=&quot;用 jQuery 當範例&quot;&gt;&lt;/a&gt;用 jQuery 當範例&lt;/h2&gt;&lt;p&gt;以點擊按鈕就新增一張卡片為例，一開始用 jQuery 寫時，大概會像下面這樣子：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#addCard&#39;&lt;/span&gt;).click(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//- 新增數據&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* do something */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//- 生成 html 並放進網頁裡&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* do something */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;隨著按鈕或其他元件的增加，要新增的事件也會變多，例如再增加一個刪除卡片：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#addCard&#39;&lt;/span&gt;).click(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//- 新增數據&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* do something */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//- 生成 html 並放進網頁裡&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* do something */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#delCard&#39;&lt;/span&gt;).click(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//- 處理要刪除的數據&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* do something */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//- 刪除卡片的 html 部份&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* do something */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;開發的時間久了之後，你可能會開始想要把 function 拆出來，並給予有意義的名字，例如：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#addCard&#39;&lt;/span&gt;).click(addCard);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#delCard&#39;&lt;/span&gt;).click(delCard);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 或是 */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#addCard&#39;&lt;/span&gt;).click(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  addCard(&lt;span class=&quot;comment&quot;&gt;/* 額外的參數 */&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#delCard&#39;&lt;/span&gt;).click(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  delCard(&lt;span class=&quot;comment&quot;&gt;/* 額外的參數 */&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addCard&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//- 新增數據&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* do something */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//- 生成 html 並放進網頁裡&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* do something */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;delCard&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//- 處理要刪除的數據&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* do something */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//- 刪除卡片的 html 部份&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* do something */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;本著 function 只處理一件事的精神，我們把更新頁面（View）的部份拆回來：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#addCard&#39;&lt;/span&gt;).click(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; data = addCard(&lt;span class=&quot;comment&quot;&gt;/* 額外的參數 */&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//- 生成 html 並放進網頁裡&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* do something */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#delCard&#39;&lt;/span&gt;).click(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; data = delCard(&lt;span class=&quot;comment&quot;&gt;/* 額外的參數 */&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//- 刪除卡片的 html 部份&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* do something */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addCard&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//- 新增數據&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* do something */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;delCard&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//- 處理要刪除的數據&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* do something */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;之後可能會想統整起來，改由一個 handler 之類的負責分派：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#addCard&#39;&lt;/span&gt;).click(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; data = CardHandler(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    type: &lt;span class=&quot;string&quot;&gt;&#39;ADD_CARD&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 額外的參數 */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//- 生成 html 並放進網頁裡&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* do something */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#delCard&#39;&lt;/span&gt;).click(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; data = CardHandler(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    type: &lt;span class=&quot;string&quot;&gt;&#39;DEL_CARD&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* 額外的參數 */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//- 刪除卡片的 html 部份&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/* do something */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CardHandler&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;action&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt;(action.type) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;ADD_CARD&#39;&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;//- 新增數據&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;/* do something */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;DEL_CARD&#39;&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;//- 處理要刪除的數據&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;/* do something */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;那整個 &lt;a href=&quot;https://facebook.github.io/flux/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Flux&lt;/a&gt; 的流程，用很籠統的圖解大概是這樣：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/2IBUum7.gif&quot; alt=&quot;Flux&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Store&lt;/code&gt; 就是儲存事件所對應的工作，&lt;code&gt;Dispatcher&lt;/code&gt; 負責分發；而 &lt;a href=&quot;http://redux.js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Redux&lt;/a&gt; 在此之上額外拆出了 &lt;code&gt;Reducer&lt;/code&gt;，但基本流程不變。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      用 jQuery 來籠統講解 Flux 的流程。
    
    </summary>
    
    
      <category term="react.js" scheme="https://notes.knovour.ninja/tags/react-js/"/>
    
      <category term="flux" scheme="https://notes.knovour.ninja/tags/flux/"/>
    
      <category term="redux" scheme="https://notes.knovour.ninja/tags/redux/"/>
    
  </entry>
  
  <entry>
    <title>記憶中看過最不尊重設計的一件事</title>
    <link href="https://notes.knovour.ninja/2016/04/14/one-thing-about-disrespect-design-in-my-memory/"/>
    <id>https://notes.knovour.ninja/2016/04/14/one-thing-about-disrespect-design-in-my-memory/</id>
    <published>2016-04-14T12:41:48.000Z</published>
    <updated>2016-04-14T16:21:27.976Z</updated>
    
    <content type="html">&lt;p&gt;這件事其實很久了，只是最近又想到它，所以乾脆紀錄下來好了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/adobe-fonts/source-han-sans&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;思源黑體&lt;/a&gt;，一套完整的中文字體，可以在網頁上完整顯示，不會因為找不到字而出現豆腐框為主要目標，現在應該很多人都知道這個字體了；Google 那邊則另外命名叫 &lt;a href=&quot;https://www.google.com/get/noto/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Noto Sans&lt;/a&gt;，不過重點不在這，這邊只是要紀錄一下思源黑體剛發佈時發生的事。&lt;/p&gt;
&lt;p&gt;當時在 &lt;a href=&quot;http://blog.typekit.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Adobe Typekit Blog&lt;/a&gt; 上，官方&lt;a href=&quot;http://blog.typekit.com/alternate/source-han-sans-cht/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;發文&lt;/a&gt;介紹了這個字體的誕生，談了一下設計的人員，以及講解一些中文字在使用漢字的國家之間寫法的差異。&lt;/p&gt;
&lt;p&gt;但有個傢伙卻開始在留言中大談古字的真善美，談台灣教育部的不是，義正辭嚴的要求遵循「正統」繁體中文的字體寫法，鬧了一輪後還去辦了個 GitHub 帳號跑去發 &lt;a href=&quot;https://github.com/adobe-fonts/source-han-sans/issues/6&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;issue&lt;/a&gt; 再來一次，硬要這群國外設計團隊也該當個考古學者；在這串上面大放厥詞拍拍屁股後，直到現在再也沒有在任何 issue 裡出現過。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;網路留言看久了之後感覺，那種習慣把自己叫「在下」的人，要馬只是單純宅了點，要馬就是個白目。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      紀錄一下思源黑體剛發佈時發生的事
    
    </summary>
    
    
      <category term="雜談" scheme="https://notes.knovour.ninja/tags/%E9%9B%9C%E8%AB%87/"/>
    
  </entry>
  
  <entry>
    <title>D3 + p5.js 筆記 - Bar Chart</title>
    <link href="https://notes.knovour.ninja/2016/03/29/d3-p5-js-notes-bar-chart/"/>
    <id>https://notes.knovour.ninja/2016/03/29/d3-p5-js-notes-bar-chart/</id>
    <published>2016-03-29T15:36:17.000Z</published>
    <updated>2016-03-30T15:31:45.912Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Knovour/d3-p5-practice/tree/master/example/bar&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;程式碼&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bl.ocks.org/mbostock/3885304&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;範例來源&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;程式碼說明&quot;&gt;&lt;a href=&quot;#程式碼說明&quot; class=&quot;headerlink&quot; title=&quot;程式碼說明&quot;&gt;&lt;/a&gt;程式碼說明&lt;/h2&gt;&lt;p&gt;這次範例來源有 hover 的顏色變化，為了省略寫作標判定的部份，我另外載入了 &lt;a href=&quot;http://p5play.molleindustria.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;p5.play.js&lt;/a&gt;。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;大部分的區塊應該不用特別講了，大概提一下 &lt;a href=&quot;http://p5play.molleindustria.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;p5.play.js&lt;/a&gt; 的一點坑就好。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;createSprite&lt;/code&gt; 的座標指的是每個 bar 的中心點，向外畫出矩形，所以不會像一般畫長方形一樣，座標在左上角，若不額外調整位置會跑掉。然而，這種畫法是不是最終定案不清楚，畢竟 &lt;a href=&quot;http://p5play.molleindustria.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;p5.play.js&lt;/a&gt; 還不是正式版。&lt;/p&gt;
&lt;h2 id=&quot;題外話&quot;&gt;&lt;a href=&quot;#題外話&quot; class=&quot;headerlink&quot; title=&quot;題外話&quot;&gt;&lt;/a&gt;題外話&lt;/h2&gt;&lt;p&gt;用 &lt;code&gt;canvas&lt;/code&gt; 畫圖其中一個麻煩的地方大概就是游標判定了，&lt;a href=&quot;http://p5play.molleindustria.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;p5.play.js&lt;/a&gt; 的游標判定功能不算強大，只有支援圓跟矩形，圖片則是有另外的判定方式（游標底下是不是透明背景之類），跟其他遊戲引擎類的差不多。&lt;/p&gt;
&lt;p&gt;像百度的 &lt;a href=&quot;http://echarts.baidu.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ECharts&lt;/a&gt; 的範例互動多半也是用比較折衷的做法。&lt;/p&gt;
&lt;p&gt;不過之前看到了 &lt;a href=&quot;http://paperjs.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Paper.js&lt;/a&gt; 這個東西，在游標測試的&lt;a href=&quot;http://paperjs.org/examples/hit-testing/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;範例&lt;/a&gt;裡看起來運作得很完美，改天來試試看。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Knovour/d3-p5-practice/tree/master/example/bar&quot;&gt;程式碼&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bl.ocks.org/mbostock/3885304&quot;&gt;範例來源&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;程式碼說明&quot;&gt;&lt;a href=&quot;#程式碼說明&quot; class=&quot;headerlink&quot; title=&quot;程式碼說明&quot;&gt;&lt;/a&gt;程式碼說明&lt;/h2&gt;&lt;p&gt;這次範例來源有 hover 的顏色變化，為了省略寫作標判定的部份，我另外載入了 &lt;a href=&quot;http://p5play.molleindustria.org/&quot;&gt;p5.play.js&lt;/a&gt;。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Sails.js 的一些問題及現況</title>
    <link href="https://notes.knovour.ninja/2016/03/23/problems-about-sails-js/"/>
    <id>https://notes.knovour.ninja/2016/03/23/problems-about-sails-js/</id>
    <published>2016-03-22T16:00:06.000Z</published>
    <updated>2016-03-23T11:38:48.557Z</updated>
    
    <content type="html">&lt;p&gt;本來標題想寫「Sails.js 算不算死了」，不過這樣似乎太過分了，這篇主要是講講之前用它來開發的感受。&lt;/p&gt;
&lt;h2 id=&quot;TL-DR-不負責任懶人包&quot;&gt;&lt;a href=&quot;#TL-DR-不負責任懶人包&quot; class=&quot;headerlink&quot; title=&quot;TL;DR - 不負責任懶人包&quot;&gt;&lt;/a&gt;TL;DR - 不負責任懶人包&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://sailsjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sails.js&lt;/a&gt; 主要維護者 &lt;a href=&quot;https://github.com/mikermcneil&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mikermcneil&lt;/a&gt; 與其中一位成員 &lt;a href=&quot;https://github.com/tjwebb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tjwebb&lt;/a&gt; 有「理念上的問題」，導致開發停滯了超過半年之久，之後後者離開另外建立了 &lt;a href=&quot;https://github.com/trailsjs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Trails.js&lt;/a&gt;，而 &lt;a href=&quot;http://sailsjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sails.js&lt;/a&gt; 在今年繼續維護。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;長篇抱怨文&quot;&gt;&lt;a href=&quot;#長篇抱怨文&quot; class=&quot;headerlink&quot; title=&quot;長篇抱怨文&quot;&gt;&lt;/a&gt;長篇抱怨文&lt;/h2&gt;&lt;p&gt;去年的時候，&lt;a href=&quot;http://sailsjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sails.js&lt;/a&gt; 的版本停在 0.12.0-rcX（忘記哪個號碼）超過半年之久；在這段期間，issue 上面的回應也零零落落的，而我那時才知道，開發團隊其實有養一隻 &lt;a href=&quot;https://github.com/sailsbot&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub robot&lt;/a&gt;，太久沒回應的 issue 會強制關掉，這到是讓我感到不滿。&lt;/p&gt;
&lt;p&gt;當初 &lt;a href=&quot;https://nodejs.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js&lt;/a&gt; 入門時是從 &lt;a href=&quot;http://expressjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Express.js&lt;/a&gt; 開始的，也很習慣從這樣一個基礎的 framework 再自己安裝其他 plugin 兜成自己需要的東西，但每建一個新的專案就要重新兜一次，久了其實也挺煩的，當時也不知道 &lt;a href=&quot;http://yeoman.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Yeoman&lt;/a&gt; 這種工具。&lt;/p&gt;
&lt;p&gt;後來試了 &lt;a href=&quot;http://krakenjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kraken.js&lt;/a&gt; 以及 &lt;a href=&quot;http://sailsjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sails.js&lt;/a&gt; 這兩個比較屬於包山包海的 framework，而且都是以 &lt;a href=&quot;http://expressjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Express.js&lt;/a&gt; 為基底再包上一層，在使用一段時間後卻覺得這反而讓我更加麻煩，表面上似乎是幫你解決了一些雜事，反之要面對的卻是一長串看似方便其實很亂的 &lt;code&gt;config&lt;/code&gt; 參數。&lt;/p&gt;
&lt;p&gt;當時用了 Kraken 1.x 的版本，就像是包上了一層薄薄的蝦殼，薄到讓我覺得多包這一層沒什麼太大的意義，原本 &lt;code&gt;middleware&lt;/code&gt; 的載入方式改成透過 &lt;code&gt;config&lt;/code&gt; 反而變得很難用，加上當時在折騰 &lt;a href=&quot;http://socket.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Socket.IO&lt;/a&gt;，而 &lt;a href=&quot;http://krakenjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kraken.js&lt;/a&gt; 並沒有往這方面做進一步整合，導致不論是在 &lt;a href=&quot;http://expressjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Express.js&lt;/a&gt; 或是 &lt;a href=&quot;http://krakenjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kraken.js&lt;/a&gt; 裡加上 &lt;a href=&quot;http://socket.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Socket.IO&lt;/a&gt; 的方式是差不多的，但後者還得多繞一點彎路，本末倒置。&lt;/p&gt;
&lt;p&gt;而 &lt;a href=&quot;http://sailsjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sails.js&lt;/a&gt; 有將之另外整合，並打包成了 sails.io.js，相比之下方便不少，所以最後採用它來寫了幾個專案，但一段時間後也開始有了一些怨氣，一個是預設作為自動化排程的 &lt;a href=&quot;http://gruntjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Grunt&lt;/a&gt; 非常難用，相關設定又臭又長而且不盡相同，我曾為了某個 plugin 設定搞不定而折騰很長一段時間，最後卻是參考其他不相關的 plugin 的設定方式照著改過去才成功。&lt;/p&gt;
&lt;p&gt;另一方面是作為核心的 &lt;a href=&quot;http://expressjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Express.js&lt;/a&gt; 的版本問題，&lt;a href=&quot;http://krakenjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kraken.js&lt;/a&gt; 因為有 &lt;a href=&quot;https://www.paypal.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PayPal&lt;/a&gt; 罩著，所以遷移到 Express 4.x 的速度很快，但 &lt;a href=&quot;http://sailsjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sails.js&lt;/a&gt; 就不是這麼一回事了，官方一直停在 3.x 版，開發又停滯了一段時間，使得以 &lt;a href=&quot;http://expressjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Express.js&lt;/a&gt; 為主的 plugin 也得限制版本號才能使用，本來這不是什麼大問題，因為當時連 &lt;a href=&quot;https://nodejs.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js&lt;/a&gt; 的更新也很緩慢，也是在 0.12 上卡了很長一段時間，後來在用 &lt;a href=&quot;http://sailsjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sails.js&lt;/a&gt; 寫最後一個專案時，&lt;a href=&quot;https://nodejs.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js&lt;/a&gt; 突然直接跳到了 4 版，不久 5 版也跟著推出了。這下感受就大不同了（還是可以動，主要是奇蒙子問題），那時也才開始在意 &lt;a href=&quot;http://sailsjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sails.js&lt;/a&gt; 停滯很長一段時間這件事；在這段時間裡，也造成一些 issue 因為沒有後續回應的關係而被官方的 bot 自動關掉，最後決定趁著專案的開發時間還不算久的情況下，直接改用 &lt;a href=&quot;http://koajs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Koa.js&lt;/a&gt; 重新開發，不再碰 &lt;a href=&quot;http://sailsjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sails.js&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;在遷移一陣子之後，發現了 &lt;a href=&quot;https://github.com/trailsjs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Trails.js&lt;/a&gt; 的存在，這是 &lt;a href=&quot;http://sailsjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sails.js&lt;/a&gt; 的其中一個成員離開之後建立的專案，看裡面的專案數量，似乎是以 &lt;a href=&quot;http://koajs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Koa.js&lt;/a&gt;、&lt;a href=&quot;http://expressjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Express.js&lt;/a&gt;、&lt;a href=&quot;http://hapijs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hapi.js&lt;/a&gt; 等各個基礎 framework 為底，再分別客製打包而成，在安裝時就可以選自己順手的為底來往上建立，選擇上比較靈活，但官方維護的心力應該也多了不少，目前還在 1.0 alpha，能不能取代 &lt;a href=&quot;http://sailsjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sails.js&lt;/a&gt; 還得再觀察。&lt;/p&gt;
&lt;h2 id=&quot;相關網址&quot;&gt;&lt;a href=&quot;#相關網址&quot; class=&quot;headerlink&quot; title=&quot;相關網址&quot;&gt;&lt;/a&gt;相關網址&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/langateam/sails-permissions/issues/200&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ending Sails.js Support. Migrating sails-permissions to Trails&lt;/a&gt;（裡面有列一些相關討論的 issue 連結，包含雙方各自的說法）&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://knovourland.logdown.com/posts/search?utf8=%E2%9C%93&amp;amp;q=kraken.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;以前 Blog 寫的 Kraken.js 筆記&lt;/a&gt;（不過現在都 2.0 了，應該比較沒參考價值了）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Trails-js-介紹影片&quot;&gt;&lt;a href=&quot;#Trails-js-介紹影片&quot; class=&quot;headerlink&quot; title=&quot;Trails.js 介紹影片&quot;&gt;&lt;/a&gt;Trails.js 介紹影片&lt;/h2&gt;&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;//www.youtube.com/embed/AbSp8jqFDAY&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;h2 id=&quot;自肥區&quot;&gt;&lt;a href=&quot;#自肥區&quot; class=&quot;headerlink&quot; title=&quot;自肥區&quot;&gt;&lt;/a&gt;自肥區&lt;/h2&gt;&lt;p&gt;我把在使用 &lt;a href=&quot;http://koajs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Koa.js&lt;/a&gt; 這段期間用到的 plugins 以自己覺得合適的架構打包，並用 &lt;a href=&quot;http://yeoman.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Yeoman&lt;/a&gt; 來做自動化安裝，不過目前只有做將整個專案架構複製到自己的資料夾裡這件事而已，更多客製化的方式還得研究研究，另外之後會先把 plugins 刪掉一大部分，並將 &lt;a href=&quot;http://gulpjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gulp.js&lt;/a&gt; 改成單純的用 npm script 來自動化管理專案，等這些基本問題弄好後，再把其他 plugins 加回去。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Knovour/generator-koat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;專案網址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      講講之前使用 Sail.js 的一些感受，以及這幾個月 Sails 官方的一些問題。
    
    </summary>
    
    
      <category term="node.js" scheme="https://notes.knovour.ninja/tags/node-js/"/>
    
      <category term="sails.js" scheme="https://notes.knovour.ninja/tags/sails-js/"/>
    
  </entry>
  
  <entry>
    <title>D3 + p5.js 筆記 - 自訂 preload 的 Ajax</title>
    <link href="https://notes.knovour.ninja/2016/03/22/d3-p5-js-notes-custom-ajax-preload/"/>
    <id>https://notes.knovour.ninja/2016/03/22/d3-p5-js-notes-custom-ajax-preload/</id>
    <published>2016-03-22T08:17:20.000Z</published>
    <updated>2016-03-22T10:15:00.049Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://p5js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;p5.js&lt;/a&gt; 已經內建數種檔案請求的方式，這邊紀錄一下自己建立 ajax 請求註冊到 &lt;code&gt;preload()&lt;/code&gt; 的方式（以 &lt;a href=&quot;https://d3js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;D3&lt;/a&gt; 為例）。&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/Knovour/57b761d08ff758396ab6.js?file=p5-private-preload.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;這邊要注意的是，在第 10 行的部份，請求後的資料不能直接指定給預先宣告的變數，否則 &lt;code&gt;setup()&lt;/code&gt; 取資料時會是 &lt;code&gt;undefined&lt;/code&gt;，或者可以這樣宣告：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&#39;use strict&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// load function&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; tmp = &amp;#123; list: [] &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ---&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在取得資料後直接將資料指定給 &lt;code&gt;tmp.list&lt;/code&gt;，在 &lt;code&gt;setup()&lt;/code&gt; 裡直接以 &lt;code&gt;data.list&lt;/code&gt; 的方式取值即可，而範例裡的 &lt;code&gt;return&lt;/code&gt; 跟 &lt;code&gt;callback&lt;/code&gt; 都是必要的，省略任何一樣都會出現 &lt;code&gt;undefined&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;不用 &lt;code&gt;new&lt;/code&gt; 的方式可以到&lt;a href=&quot;https://gist.github.com/Knovour/57b761d08ff758396ab6&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;這裡&lt;/a&gt;檢視。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      給 p5.js 的 preload function 增加自訂的 ajax 請求。
    
    </summary>
    
    
      <category term="D3" scheme="https://notes.knovour.ninja/tags/D3/"/>
    
      <category term="p5.js" scheme="https://notes.knovour.ninja/tags/p5-js/"/>
    
  </entry>
  
  <entry>
    <title>D3 + p5.js 筆記 - Area Chart</title>
    <link href="https://notes.knovour.ninja/2016/03/03/d3-p5-js-notes-area-chart/"/>
    <id>https://notes.knovour.ninja/2016/03/03/d3-p5-js-notes-area-chart/</id>
    <published>2016-03-03T14:44:07.000Z</published>
    <updated>2016-03-21T14:11:16.378Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Knovour/d3-p5-practice/tree/master/example/area&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;程式碼&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bl.ocks.org/mbostock/3883195&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;範例來源&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;程式碼說明&quot;&gt;&lt;a href=&quot;#程式碼說明&quot; class=&quot;headerlink&quot; title=&quot;程式碼說明&quot;&gt;&lt;/a&gt;程式碼說明&lt;/h2&gt;&lt;p&gt;以下主要說明部份的坑以及重點，請配合 GitHub 的 js 程式碼服用。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;preload&quot;&gt;&lt;a href=&quot;#preload&quot; class=&quot;headerlink&quot; title=&quot;preload&quot;&gt;&lt;/a&gt;preload&lt;/h3&gt;&lt;p&gt;&lt;code&gt;ctx.loadTable&lt;/code&gt; 是非同步處理，最普通的作法就是指定給宣告的變數&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;dataset = ctx.loadTable(&lt;span class=&quot;string&quot;&gt;&#39;area.tsv&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;tsv&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;header&#39;&lt;/span&gt;, callback)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但 preload 請求的資料，在 &lt;code&gt;setup&lt;/code&gt; 函式裡才可以使用，如果直接在 preload 裡 console 出來是沒有東西的，但你可以宣告 callback function 來對資料預先處理。&lt;/p&gt;
&lt;p&gt;不得不說，p5.js 的 &lt;code&gt;loadTable&lt;/code&gt; 幫你整理資料這件事實在非常多餘，幫你把資料整理好了，但你卻沒法直接取出完整的 json 陣列資料。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://farm2.staticflickr.com/1590/25066224863_bd6917b041_o.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;而官方提供的 API 中，最接近的 &lt;code&gt;getObject&lt;/code&gt; 取出來的樣子是：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;: data1,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;: data2,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&#39;2&#39;&lt;/span&gt;: ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;WTF&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;setup&quot;&gt;&lt;a href=&quot;#setup&quot; class=&quot;headerlink&quot; title=&quot;setup&quot;&gt;&lt;/a&gt;setup&lt;/h3&gt;&lt;p&gt;主要就是在這邊讓 D3 計算縮放後的刻度、座標，由於 &lt;code&gt;draw&lt;/code&gt; 的函式預設會刷新畫布，所以能夠事先計算的部份都盡量放在 setup 裡。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;xScale = d3.time.scale()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  .domain(d3.extent(dataset, d =&amp;gt; d.date))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  .range([ chartX, chartWidth + chartX ]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;xTickFmt = xScale.tickFormat(date =&amp;gt; date.getFullYear());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;xLabels  = xScale.ticks(d3.time.year);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;yScale = d3.scale.linear()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  .domain([ &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, d3.max(dataset, (&amp;#123; close &amp;#125;) =&amp;gt; close) ])&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  .range([ chartHeight + chartY, chartY ]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;yLabels = yScale.ticks(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;domain&lt;/code&gt;、&lt;code&gt;range&lt;/code&gt;，簡單來講就是從資料以及指定的畫布大小來決定畫布上的座標，省去寫縮放程式碼的麻煩。&lt;/p&gt;
&lt;p&gt;X 軸是以時間為刻度，用 D3 的 &lt;code&gt;ticks&lt;/code&gt; 設定為以年份劃分刻度，Y 軸則設定為分割成 10 個座標。ticks 最後會產生一串陣列，裡面存放刻度的標籤名稱，用 &lt;code&gt;yScale(data)&lt;/code&gt; 可以取得該筆資料在 Y 軸的位置。&lt;/p&gt;
&lt;h3 id=&quot;draw&quot;&gt;&lt;a href=&quot;#draw&quot; class=&quot;headerlink&quot; title=&quot;draw&quot;&gt;&lt;/a&gt;draw&lt;/h3&gt;&lt;p&gt;p5 預設會重複畫 draw 裡的內容，可以在 setup 補上 &lt;code&gt;noLoop&lt;/code&gt; 來關掉自動重繪，否則也要在 draw 的開頭使用 &lt;code&gt;clean&lt;/code&gt; 來清掉畫布，否則畫布上的元素會重複疊加上去。另外畫布的背景預設為透明，故需先畫上指定顏色的背景，否則存成圖檔時會是透明背景。&lt;/p&gt;
&lt;p&gt;這邊注意的一點是，除了 &lt;code&gt;stroke&lt;/code&gt;、&lt;code&gt;fill&lt;/code&gt; 等等會影響畫筆（ctx）行為之外，有些則是會影響整個畫布的，比如 &lt;code&gt;rotate&lt;/code&gt; 會把要畫的圖層整個旋轉，結尾要使用 &lt;code&gt;resetMatrix&lt;/code&gt; 調回原狀，或是用 &lt;code&gt;push&lt;/code&gt; 與 &lt;code&gt;pop&lt;/code&gt; 來暫存原本的狀態。&lt;/p&gt;
&lt;p&gt;比如前面設定 fill 的顏色，但是在 push 與 pop 之間使用 &lt;code&gt;noFill&lt;/code&gt; 時，當 pop 出來後畫筆依舊是 fill 的狀態。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      用 D3 + p5.js 繪製 Area Chart
    
    </summary>
    
    
      <category term="D3" scheme="https://notes.knovour.ninja/tags/D3/"/>
    
      <category term="p5.js" scheme="https://notes.knovour.ninja/tags/p5-js/"/>
    
  </entry>
  
  <entry>
    <title>D3 + p5.js 筆記 - 介紹 p5</title>
    <link href="https://notes.knovour.ninja/2016/03/03/d3-p5-js-notes-introduce-p5/"/>
    <id>https://notes.knovour.ninja/2016/03/03/d3-p5-js-notes-introduce-p5/</id>
    <published>2016-03-02T16:43:10.000Z</published>
    <updated>2016-03-21T13:21:27.885Z</updated>
    
    <content type="html">&lt;p&gt;先來大致介紹一下 &lt;a href=&quot;http://p5js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;p5.js&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;這是 &lt;a href=&quot;https://processing.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Processing&lt;/a&gt; 團隊移植的 web 版本，除了 &lt;a href=&quot;http://p5js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;p5&lt;/a&gt; 之外還有一個是由 jQuery 作者自己實現，叫 &lt;a href=&quot;http://processingjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Processingjs&lt;/a&gt; 的函式庫，可別搞混了。&lt;/p&gt;
&lt;h2 id=&quot;為什麼選擇-p5？&quot;&gt;&lt;a href=&quot;#為什麼選擇-p5？&quot; class=&quot;headerlink&quot; title=&quot;為什麼選擇 p5？&quot;&gt;&lt;/a&gt;為什麼選擇 p5？&lt;/h2&gt;&lt;p&gt;以前大學時有教授教過 &lt;a href=&quot;https://processing.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Processing&lt;/a&gt; 算是因素之一，入門上不算太難。&lt;/p&gt;
&lt;p&gt;在圖片繪製上，&lt;a href=&quot;http://p5js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;p5&lt;/a&gt; 也簡化了一些步驟，比如畫線的時候，canvas 的畫法是&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;canvas.moveTo(x, y);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;canvas.lineTo(x2, y2);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;而 &lt;a href=&quot;http://p5js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;p5&lt;/a&gt; 只要一個 &lt;code&gt;line&lt;/code&gt; 就可以解決。稍微試過 &lt;a href=&quot;http://www.pixijs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pixi.js&lt;/a&gt; 與 &lt;a href=&quot;http://createjs.com/easeljs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EaselJS&lt;/a&gt;，這兩個基本上跟 canvas 原本的畫法差不了多少，畢竟定位是遊戲引擎，&lt;a href=&quot;http://p5js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;p5&lt;/a&gt; 是繪圖函式庫。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;canvas-1px-直線問題&quot;&gt;&lt;a href=&quot;#canvas-1px-直線問題&quot; class=&quot;headerlink&quot; title=&quot;canvas 1px 直線問題&quot;&gt;&lt;/a&gt;canvas 1px 直線問題&lt;/h3&gt;&lt;p&gt;canvas 有一個渲染上的問題，很多剛碰的人大概都會遇到，在畫 1px（或其他奇數）寬的線時，在螢幕上顯示卻有 2px 寬。&lt;/p&gt;
&lt;p&gt;簡單圖解類似這樣：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://farm2.staticflickr.com/1464/25094916659_97593ca520_z.jpg&quot; alt=&quot;canvas&quot;&gt;&lt;/p&gt;
&lt;p&gt;當在座標上畫線時，canvas 並不會在該座標的 右邊或左邊畫線，而是會以座標為準，向兩邊各佔用一半的 px，在這邊就各佔用了 0.5px。而 canvas 的渲染機制就會把兩邊剩下的 0.5 補上顏色，類似防鋸齒那樣，就造成畫 1px 卻有 2px 寬的情形發生。&lt;/p&gt;
&lt;p&gt;解決方式就是向前或向後退 0.5 px，而 &lt;a href=&quot;http://p5js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;p5&lt;/a&gt; 會幫你搞定這件事，但由於 [D3] 在幫你計算刻度座標時，數值不會那麼漂亮，所以還是會有漏網之魚發生，至少 XY 軸是正常顯示的。&lt;/p&gt;
&lt;h2 id=&quot;p5-的基本構造&quot;&gt;&lt;a href=&quot;#p5-的基本構造&quot; class=&quot;headerlink&quot; title=&quot;p5 的基本構造&quot;&gt;&lt;/a&gt;p5 的基本構造&lt;/h2&gt;&lt;p&gt;基本上要先建立以下三個函數：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;preload&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 載入 csv, tsv 等檔案&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setup&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 初始化資料、建立 canvas 等&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;draw&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 繪製圖形&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中 &lt;code&gt;preload&lt;/code&gt; 可有可無，端看須不需要額外載入資料檔案，而絕大部分繪製的相關函數&lt;strong&gt;必須&lt;/strong&gt;要在 &lt;a href=&quot;http://p5js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;p5&lt;/a&gt; 指定的函數裡呼叫，否則不會有作用。當然也有其他的函數是獨立的（比如事件偵測），但絕大部分的還是得照著規則進行。&lt;/p&gt;
&lt;h2 id=&quot;p5-的問題&quot;&gt;&lt;a href=&quot;#p5-的問題&quot; class=&quot;headerlink&quot; title=&quot;p5 的問題&quot;&gt;&lt;/a&gt;p5 的問題&lt;/h2&gt;&lt;h3 id=&quot;全域變數&quot;&gt;&lt;a href=&quot;#全域變數&quot; class=&quot;headerlink&quot; title=&quot;全域變數&quot;&gt;&lt;/a&gt;全域變數&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://p5js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;p5&lt;/a&gt; 的函數都是全域變數，而一個網頁照一般的寫法也只會寫一個 &lt;code&gt;preload&lt;/code&gt;、&lt;code&gt;setup&lt;/code&gt;、&lt;code&gt;draw&lt;/code&gt; 等函數，當需要數個 canvas 時（畫圖表時有多個畫布很正常吧），創建 canvas 的程式碼全都要擠在同一個 setup 裡（無法用匿名函數分開包裝），在繪製時又會全部擠在一起一次，因而造成很大的麻煩。&lt;/p&gt;
&lt;h3 id=&quot;編輯器&quot;&gt;&lt;a href=&quot;#編輯器&quot; class=&quot;headerlink&quot; title=&quot;編輯器&quot;&gt;&lt;/a&gt;編輯器&lt;/h3&gt;&lt;p&gt;正因為 &lt;a href=&quot;http://p5js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;p5&lt;/a&gt; 函式都是全域變數不須宣告，所以當你在寫程式碼時，你的編輯器會出現一堆下劃線，提醒你變數未宣告之類的錯誤。&lt;/p&gt;
&lt;h2 id=&quot;解決方式&quot;&gt;&lt;a href=&quot;#解決方式&quot; class=&quot;headerlink&quot; title=&quot;解決方式&quot;&gt;&lt;/a&gt;解決方式&lt;/h2&gt;&lt;p&gt;用 &lt;code&gt;new&lt;/code&gt; 宣告一個。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; p5(ctx =&amp;gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  ctx.setup = () =&amp;gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  ctx.draw = () =&amp;gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在這裡面，不管要使用什麼函數，都要用 &lt;code&gt;ctx.[函數名稱]&lt;/code&gt; 才可使用，但也避免了瀏覽器與編輯器的問題。&lt;/p&gt;
&lt;h2 id=&quot;其他參考&quot;&gt;&lt;a href=&quot;#其他參考&quot; class=&quot;headerlink&quot; title=&quot;其他參考&quot;&gt;&lt;/a&gt;其他參考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://p5js.sketchpad.cc/sp/padlist/all-portfolio-sketches&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sketchpad&lt;/a&gt;: 網路上有一個 &lt;a href=&quot;http://p5js.sketchpad.cc/sp/padlist/all-portfolio-sketches&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sketchpad&lt;/a&gt;，上面列了一些用 &lt;a href=&quot;http://p5js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;p5&lt;/a&gt; 繪製的圖片與程式碼，可以大致了解一下怎麼寫出來的。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.infographics.tw/2015/03/beginner-visualization-with-p5js/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;p5.js － 初學者的資料視覺化函式庫&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ithelp.ithome.com.tw/question/10096456&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Processing.js 的一些介紹及分享&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      大致介紹一下 p5.js，以及一些小特性
    
    </summary>
    
    
      <category term="D3" scheme="https://notes.knovour.ninja/tags/D3/"/>
    
      <category term="p5.js" scheme="https://notes.knovour.ninja/tags/p5-js/"/>
    
  </entry>
  
  <entry>
    <title>D3 + p5.js 筆記 - 前言</title>
    <link href="https://notes.knovour.ninja/2016/03/01/d3-p5-js-notes/"/>
    <id>https://notes.knovour.ninja/2016/03/01/d3-p5-js-notes/</id>
    <published>2016-03-01T01:20:14.000Z</published>
    <updated>2016-03-02T19:04:02.176Z</updated>
    
    <content type="html">&lt;p&gt;這陣子看了點 &lt;a href=&quot;https://d3js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;D3&lt;/a&gt;，並找了官方 wiki 的&lt;a href=&quot;https://github.com/mbostock/d3/wiki/Gallery&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;範例&lt;/a&gt;來試試，不過不是用 SVG，而是用 canvas 來畫。&lt;/p&gt;
&lt;p&gt;之前要寫的網站要生成簡易的圖表，但因為沒學過 &lt;a href=&quot;https://d3js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;D3&lt;/a&gt; 的經驗（當時也來不及），所以找了現成的 &lt;a href=&quot;http://www.chartjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Chart.js&lt;/a&gt; 來用，除了這套之外，之後也在 feedly 看了不少圖表生成的套件介紹，蠻多都是用 canvas 的。不過這倒也不是什麼選擇 canvas 的原因。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;單純犯賤罷了…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然而，&lt;a href=&quot;https://d3js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;D3&lt;/a&gt; 對 canvas 的支援不好，不過這也不是很意外。問題在於要怎麼用 &lt;a href=&quot;https://d3js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;D3&lt;/a&gt; 把處理後的資料給 canvas 畫，根據&lt;a href=&quot;http://blog.infographics.tw/2015/07/optimize-d3-with-canvas/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;這裡&lt;/a&gt;的介紹，第三種方式算是我在網路上最常看見的，基本上就是處理資料並創建虛假的元素，假裝自己在操作 SVG，然後再把這些&lt;strong&gt;假元素&lt;/strong&gt;吐出來再用 canvas 的方式畫出來，怎麼看都覺得…蠻蠢的。所以我比較偏好第二種方式，讓 &lt;a href=&quot;https://d3js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;D3&lt;/a&gt; 負責處理資料、生成刻度等等，再用 &lt;a href=&quot;http://p5js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;p5.js&lt;/a&gt; 直接畫上去。&lt;/p&gt;
&lt;p&gt;總之，之後會加減從 &lt;a href=&quot;https://d3js.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;D3&lt;/a&gt; 官方的&lt;a href=&quot;https://github.com/mbostock/d3/wiki/Gallery&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;範例&lt;/a&gt;裡面先挑簡單的例子來練習，也會原始碼放到 GitHub 上。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      往後會用 [D3] 官方範例來練習，並用 [p5.js] 繪製而成，程式碼會放到 GitHub 上。
    
    </summary>
    
    
      <category term="D3" scheme="https://notes.knovour.ninja/tags/D3/"/>
    
      <category term="p5.js" scheme="https://notes.knovour.ninja/tags/p5-js/"/>
    
  </entry>
  
  <entry>
    <title>Koa.js 踩坑筆記</title>
    <link href="https://notes.knovour.ninja/2016/02/21/koa-notes/"/>
    <id>https://notes.knovour.ninja/2016/02/21/koa-notes/</id>
    <published>2016-02-21T13:55:52.000Z</published>
    <updated>2016-02-27T21:03:14.854Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt; 以 &lt;a href=&quot;https://github.com/koajs/koa/tree/v2.x&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Koa.js 2.0.0-alpha.3&lt;/a&gt; 版本為主。 &lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;ctx-body-沒反應&quot;&gt;&lt;a href=&quot;#ctx-body-沒反應&quot; class=&quot;headerlink&quot; title=&quot;ctx.body 沒反應&quot;&gt;&lt;/a&gt;&lt;code&gt;ctx.body&lt;/code&gt; 沒反應&lt;/h2&gt;&lt;p&gt;當 &lt;code&gt;ctx.body&lt;/code&gt; 在 Promise 的函式裡時（如 co）則不會對頁面有任何反應，需在該函式前加上 &lt;code&gt;return&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;index(ctx) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; co(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;*(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;// &amp;lt;- Must have `return`&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ctx.body = &lt;span class=&quot;string&quot;&gt;&#39;success&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;自訂 &lt;code&gt;middleware&lt;/code&gt; 的時候也是如此&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;app.use((ctx, next) =&amp;gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  ctx.msg = &lt;span class=&quot;string&quot;&gt;&#39;hello&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; next(); &lt;span class=&quot;comment&quot;&gt;// &amp;lt;- Must have `return`&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;1-0-與-2-0-版本問題&quot;&gt;&lt;a href=&quot;#1-0-與-2-0-版本問題&quot; class=&quot;headerlink&quot; title=&quot;1.0 與 2.0 版本問題&quot;&gt;&lt;/a&gt;1.0 與 2.0 版本問題&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/koajs/koa&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Koa.js&lt;/a&gt; 的大部分 middleware 都已經開始支援 &lt;a href=&quot;https://github.com/koajs/koa/tree/v2.x&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2.0&lt;/a&gt;，鑑於是 alpha 的關係，要安裝這些元件時要加 &lt;code&gt;@next&lt;/code&gt; 的 tag，尚未支援的在使用時可以安裝 &lt;code&gt;koa-convert&lt;/code&gt; 來轉換。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      紀錄 Koa.js 的一些用法跟踩到的坑
    
    </summary>
    
    
      <category term="node.js" scheme="https://notes.knovour.ninja/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>Sequelize 踩坑筆記</title>
    <link href="https://notes.knovour.ninja/2016/01/12/sequelize-notes/"/>
    <id>https://notes.knovour.ninja/2016/01/12/sequelize-notes/</id>
    <published>2016-01-12T15:44:32.000Z</published>
    <updated>2016-01-20T16:26:34.220Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;範例以&lt;a href=&quot;https://github.com/sequelize/express-example/tree/master/models&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;這裡&lt;/a&gt;為準（以下會換成 ES6 寫法），&lt;a href=&quot;https://github.com/koajs/koa&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Koa&lt;/a&gt; 用法亦同&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;異步程式碼寫法以 &lt;a href=&quot;https://github.com/tj/co&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;co&lt;/a&gt; 這套件來簡化 Promise 寫法&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;內建參數的位置&quot;&gt;&lt;a href=&quot;#內建參數的位置&quot; class=&quot;headerlink&quot; title=&quot;內建參數的位置&quot;&gt;&lt;/a&gt;內建參數的位置&lt;/h2&gt;&lt;p&gt;&lt;script src=&quot;https://gist.github.com/Knovour/387c0699bd427d12b013.js&quot;&gt;&lt;/script&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;基本用法&quot;&gt;&lt;a href=&quot;#基本用法&quot; class=&quot;headerlink&quot; title=&quot;基本用法&quot;&gt;&lt;/a&gt;基本用法&lt;/h2&gt;&lt;p&gt;我們在 &lt;code&gt;getFullName&lt;/code&gt; 裡加上以下這段&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; co(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;*(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; user = &lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt; User.findOne();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`&lt;span class=&quot;subst&quot;&gt;$&amp;#123;user.firstName&amp;#125;&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;$&amp;#123;user.lastName&amp;#125;&lt;/span&gt;`&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;getterMethods&lt;/code&gt; 裡可以加入一個 &lt;code&gt;fullName&lt;/code&gt; 的 function&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;getterMethods: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  fullName() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`&lt;span class=&quot;subst&quot;&gt;$&amp;#123;this.firstName&amp;#125;&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;$&amp;#123;this.lastName&amp;#125;&lt;/span&gt;`&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這樣 &lt;code&gt;getFullName&lt;/code&gt; 裡就可以直接寫 &lt;code&gt;user.fullName&lt;/code&gt; 獲取全名了。&lt;/p&gt;
&lt;p&gt;在外部使用時可以直接寫&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; Models = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;/path/to/models&#39;&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;// 注意範例裡的 index.js 內容&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;co(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;*(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; fullName = &lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt; Models.User.getFullName();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(fullName);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;).catch(&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.error);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;使用其他-table&quot;&gt;&lt;a href=&quot;#使用其他-table&quot; class=&quot;headerlink&quot; title=&quot;使用其他 table&quot;&gt;&lt;/a&gt;使用其他 table&lt;/h3&gt;&lt;p&gt;假如我在 &lt;code&gt;User&lt;/code&gt; 裡需要用到其他 table（假設叫 &lt;code&gt;Family&lt;/code&gt;），我就可以寫 &lt;code&gt;sequelize.models.Family&lt;/code&gt; 來呼叫。&lt;/p&gt;
&lt;h2 id=&quot;建立關聯（associate）&quot;&gt;&lt;a href=&quot;#建立關聯（associate）&quot; class=&quot;headerlink&quot; title=&quot;建立關聯（associate）&quot;&gt;&lt;/a&gt;建立關聯（associate）&lt;/h2&gt;&lt;p&gt;假設有個 table 叫 &lt;code&gt;Pet&lt;/code&gt;，裡面有個 key 叫 &lt;code&gt;owner&lt;/code&gt;，用以紀錄 &lt;code&gt;User&lt;/code&gt; 的 id。&lt;/p&gt;
&lt;p&gt;兩邊的關聯性程式如下&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 寫在各自的 associate function 裡&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Pet&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Pet.belongsTo(models.User, &amp;#123; foreignKey: &lt;span class=&quot;string&quot;&gt;&#39;owner&#39;&lt;/span&gt; &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// User（owner 即為 Pet 裡的 key）&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;User.hasMany(models.Pet, &amp;#123; foreignKey: &lt;span class=&quot;string&quot;&gt;&#39;owner&#39;&lt;/span&gt; &amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;include&quot;&gt;&lt;a href=&quot;#include&quot; class=&quot;headerlink&quot; title=&quot;include&quot;&gt;&lt;/a&gt;include&lt;/h3&gt;&lt;p&gt;在查找的 json 中用 include 時，&lt;code&gt;hasMany&lt;/code&gt; 與 &lt;code&gt;hasOne&lt;/code&gt; 出來的 table 名稱會有單複數差異&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// hasMany&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  firstName: &lt;span class=&quot;string&quot;&gt;&#39;XXXX&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  Pets: [&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// hasOne&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  firstName: &lt;span class=&quot;string&quot;&gt;&#39;XXXX&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  Pet: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;group&quot;&gt;&lt;a href=&quot;#group&quot; class=&quot;headerlink&quot; title=&quot;group&quot;&gt;&lt;/a&gt;group&lt;/h3&gt;&lt;p&gt;要將 include 的資料進行 group 或 order 時，需要連帶寫上 table 名稱，例：&lt;code&gt;Pets.id&lt;/code&gt;。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      紀錄 Sequelize 的一些用法跟踩到的坑
    
    </summary>
    
    
      <category term="node.js" scheme="https://notes.knovour.ninja/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>放棄在 OpenShift 上管理部落格</title>
    <link href="https://notes.knovour.ninja/2016/01/11/change-blog-from-openshift-to-github/"/>
    <id>https://notes.knovour.ninja/2016/01/11/change-blog-from-openshift-to-github/</id>
    <published>2016-01-11T15:40:12.000Z</published>
    <updated>2016-01-11T16:40:27.854Z</updated>
    
    <content type="html">&lt;p&gt;去年決定將 Blog 從 &lt;a href=&quot;http://logdown.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Logdown&lt;/a&gt; 換成自架 &lt;a href=&quot;https://ghost.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ghost&lt;/a&gt; 後，就想找一個線上空間來管理。但 &lt;a href=&quot;https://www.linode.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linode&lt;/a&gt; 或 &lt;a href=&quot;https://www.digitalocean.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Digital Ocean&lt;/a&gt; 要從頭來覺得麻煩，而 &lt;a href=&quot;https://heroku.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Heroku&lt;/a&gt; 不知道為何怎樣就是看不懂，後來看到 &lt;a href=&quot;https://www.openshift.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OpenShift&lt;/a&gt; 設定似乎挺簡單，於是就辦來試試看。&lt;/p&gt;
&lt;p&gt;無奈 &lt;a href=&quot;https://www.openshift.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OpenShift&lt;/a&gt; 根本 Bug 滿天飛，社群的 &lt;a href=&quot;https://ghost.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ghost&lt;/a&gt; 架設速成 script 根本不能用就算了，連從官方的 Node.js 重頭架也常設定跑失敗，跑到最後居然是鎖我帳號？？更別說我在試用時三不五時被登出，不然就是怎麼按 Application 都沒顯示東西，也不知道怎麼回到我剛剛的設定頁面。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;後來過了幾個月回去看又好了（&lt;a href=&quot;https://heroku.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Heroku&lt;/a&gt; 這段期間我還是看不懂），但 &lt;a href=&quot;https://ghost.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ghost&lt;/a&gt; 速成 script 還是不能用，至少官方 Node 是可行的，於是就把 &lt;a href=&quot;https://ghost.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ghost&lt;/a&gt; 給弄起來了（中間在 Build 時還是爆掉幾次）。之後要把 &lt;a href=&quot;https://ghost.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ghost&lt;/a&gt; 給升級時，說要額外加 Gear（就是要收錢的意思），我就給他加了，反正一個月只有收大概幾塊錢。&lt;/p&gt;
&lt;p&gt;最近幾個月，&lt;a href=&quot;https://letsencrypt.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Let’s Encrypt&lt;/a&gt; 開放後熱了起來，想說看能不能在自己的 Blog 弄上去，然後找到了&lt;a href=&quot;https://blog.mobiushorizons.com/letsencrypt-ghost/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;這篇&lt;/a&gt;文章，做到替換 &lt;code&gt;index.js&lt;/code&gt; 來進行認證的階段怎樣就是失敗，後來又開了社群的 script 來試，結果居然可以跑了，而且替換 &lt;code&gt;index.js&lt;/code&gt; 再認證的部份是 OK 的，雖然後面的步驟我沒做，但我也不想弄了。&lt;/p&gt;
&lt;p&gt;這兩天把上面幾篇比較重要的文章搬到 &lt;a href=&quot;https://github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;，改用 &lt;a href=&quot;https://hexo.io/zh-tw/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt; 管理後，想把 &lt;a href=&quot;https://www.openshift.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OpenShift&lt;/a&gt; 上的砍掉重架當備份，無奈這次 script 又不能跑了，既然這樣也不強求了，隨他去吧，砍了帳號，別再收我錢就好。&lt;/p&gt;
&lt;p&gt;現在 domain 改用 &lt;a href=&quot;https://www.cloudflare.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CloudFlare&lt;/a&gt; 管理，免費方案也有 SSL，這樣搞還比較省事。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      抱怨一下 OpenShift 的使用感想
    
    </summary>
    
    
      <category term="openshift" scheme="https://notes.knovour.ninja/tags/openshift/"/>
    
      <category term="ghost" scheme="https://notes.knovour.ninja/tags/ghost/"/>
    
  </entry>
  
  <entry>
    <title>在 Linux 上執行 Path of Exile (PoE)</title>
    <link href="https://notes.knovour.ninja/2015/09/16/path-of-exile-on-linux/"/>
    <id>https://notes.knovour.ninja/2015/09/16/path-of-exile-on-linux/</id>
    <published>2015-09-16T13:26:00.000Z</published>
    <updated>2016-03-21T13:20:24.649Z</updated>
    
    <content type="html">&lt;p&gt;之前在 Wine 上跑過一陣子 PoE，但經過幾次更新後，loading 畫面除了狂閃外基本上就是完全進不去的狀態，然而當時也是有點膩了，所以也懶得折騰（基本上都是在講把 Wine 降級或是裝 PlayOnLinux，不過不想這樣搞）。&lt;/p&gt;
&lt;p&gt;現在 2.0 出了，「據說」修好了錯位，也偶然發現有一篇比較不那麼麻煩的設定&lt;a href=&quot;https://russell.cc/path-of-exile-linux/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文章&lt;/a&gt;，試一試還真的成功了，在這邊紀錄一下。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;註：文章裡似乎是把 PoE 另外裝其他地方，再外帶參數啟動（我的理解啦），但我沒有用 Wine 模擬其他東西的需要，所以就把覺得可以跳過的部份跳過，下面的紀錄基本上就是個精簡後的設定步驟。&lt;/p&gt;
&lt;h2 id=&quot;環境&quot;&gt;&lt;a href=&quot;#環境&quot; class=&quot;headerlink&quot; title=&quot;環境&quot;&gt;&lt;/a&gt;環境&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://manjaro.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Manjaro Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.kde.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;KDE Plasma 5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;NVIDIA 顯卡&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;執行-winecfg&quot;&gt;&lt;a href=&quot;#執行-winecfg&quot; class=&quot;headerlink&quot; title=&quot;執行 winecfg&quot;&gt;&lt;/a&gt;執行 winecfg&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;選定 windows 版本（原文是 8 不過選 10 也沒差）。&lt;/li&gt;
&lt;li&gt;將 &lt;code&gt;openal32&lt;/code&gt; 加進函式庫裡。&lt;/li&gt;
&lt;li&gt;勾選虛擬桌面，解析度自己根據需求調整。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://farm1.staticflickr.com/577/21195623851_4c22a1dc13_b.jpg&quot; alt=&quot;winecfg&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;安裝-windows-相關套件&quot;&gt;&lt;a href=&quot;#安裝-windows-相關套件&quot; class=&quot;headerlink&quot; title=&quot;安裝 windows 相關套件&quot;&gt;&lt;/a&gt;安裝 windows 相關套件&lt;/h2&gt;&lt;p&gt;執行 &lt;code&gt;winetricks directx9 vcrun2010 riched20 usp10&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;安裝遊戲&quot;&gt;&lt;a href=&quot;#安裝遊戲&quot; class=&quot;headerlink&quot; title=&quot;安裝遊戲&quot;&gt;&lt;/a&gt;安裝遊戲&lt;/h2&gt;&lt;p&gt;執行 PoE 安裝檔，之後再開啟下載主程式，這部份不會有問題，但主程式裝完後先關掉不要按 Launch，不然 wine 會當掉。&lt;/p&gt;
&lt;h2 id=&quot;執行-wine-regedit&quot;&gt;&lt;a href=&quot;#執行-wine-regedit&quot; class=&quot;headerlink&quot; title=&quot;執行 wine regedit&quot;&gt;&lt;/a&gt;執行 &lt;code&gt;wine regedit&lt;/code&gt;&lt;/h2&gt;&lt;p&gt;安裝期間可以先處理這部份（在 regedit 裡移到對應的路徑）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\FontSubstitutes&lt;/code&gt;：新增一個字串值叫 &lt;code&gt;Fontin SmallCaps&lt;/code&gt;，數值為 &lt;code&gt;Fontin&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;HKEY_CURRENT_USER\Software\Wine\Direct3D&lt;/code&gt;：若沒有 &lt;code&gt;Direct3D&lt;/code&gt; 的資料夾則自行新增一個。在底下新增以下資料：&lt;ol&gt;
&lt;li&gt;&lt;code&gt;OffscreenRenderingMode&lt;/code&gt;：字串值為 &lt;code&gt;backbuffer&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;VideoMemorySize&lt;/code&gt;：這是你的顯卡記憶體大小，以 MB 計，我的是 2048。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UseGLSL&lt;/code&gt;：NVIDIA 顯卡限定，值為 &lt;code&gt;disabled&lt;/code&gt;，若執行時覺得有問題可以把這個值移除看看。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://farm1.staticflickr.com/738/20999863178_1337f3d5a8_b.jpg&quot; alt=&quot;regedit&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;設定-PoE&quot;&gt;&lt;a href=&quot;#設定-PoE&quot; class=&quot;headerlink&quot; title=&quot;設定 PoE&quot;&gt;&lt;/a&gt;設定 PoE&lt;/h2&gt;&lt;p&gt;到 &lt;code&gt;~/文件/My Games/Path of Exile/&lt;/code&gt;（不同發行版位置可能不大一樣），開啟 &lt;code&gt;production_Config.ini&lt;/code&gt;，在 &lt;code&gt;[DISPLAY]&lt;/code&gt; 底下新增或替換以下設定：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;fullscreen=true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;borderless_windowed_fullscreen=false&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;resolution_height=虛擬桌面高度&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;resolution_width=虛擬桌面寬度&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;結束&quot;&gt;&lt;a href=&quot;#結束&quot; class=&quot;headerlink&quot; title=&quot;結束&quot;&gt;&lt;/a&gt;結束&lt;/h2&gt;&lt;p&gt;等 PoE 主程式載完就可以啟動了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://farm6.staticflickr.com/5805/21197789131_d983728162_o.jpg&quot; alt=&quot;play&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;感想&quot;&gt;&lt;a href=&quot;#感想&quot; class=&quot;headerlink&quot; title=&quot;感想&quot;&gt;&lt;/a&gt;感想&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;基本上不會像以前那樣 FPS 掉很重了，但偶爾會破圖。&lt;/li&gt;
&lt;li&gt;地圖亮度偏暗，地穴根本是黑的，使用冰系或雷系技能擊中或發動瞬間會照亮地圖（火焰反而沒法照亮…），招喚 Golem（2.0 新技能）可以永久照亮。&lt;/li&gt;
&lt;li&gt;音效要在設定裡選擇 &lt;code&gt;Generic Software on out&lt;/code&gt; 開頭的才有聲音。&lt;/li&gt;
&lt;li&gt;只有 Act4 沒錯位就算了，Act123 + Map 的錯位感覺更嚴重了是怎樣，新增的 Map 也是一樣慘。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;參考來源&quot;&gt;&lt;a href=&quot;#參考來源&quot; class=&quot;headerlink&quot; title=&quot;參考來源&quot;&gt;&lt;/a&gt;參考來源&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://russell.cc/path-of-exile-linux/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Path of Exile on Linux&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      用 Wine 執行 PoE，無須降級、免裝 PlayOnLinux。
    
    </summary>
    
    
      <category term="linux" scheme="https://notes.knovour.ninja/tags/linux/"/>
    
      <category term="wine" scheme="https://notes.knovour.ninja/tags/wine/"/>
    
      <category term="game" scheme="https://notes.knovour.ninja/tags/game/"/>
    
  </entry>
  
  <entry>
    <title>用 PM2 部署 node server</title>
    <link href="https://notes.knovour.ninja/2015/08/13/deploy-node-js-by-pm2/"/>
    <id>https://notes.knovour.ninja/2015/08/13/deploy-node-js-by-pm2/</id>
    <published>2015-08-12T18:38:00.000Z</published>
    <updated>2016-01-11T15:48:49.371Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前置作業&quot;&gt;&lt;a href=&quot;#前置作業&quot; class=&quot;headerlink&quot; title=&quot;前置作業&quot;&gt;&lt;/a&gt;前置作業&lt;/h2&gt;&lt;p&gt;首先先設定完&lt;a href=&quot;https://notes.knovour.ninja/2015/07/17/deploy-node-js-by-shipit/&quot;&gt;這篇文&lt;/a&gt;的前置作業。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;部署與開發用的機器都要安裝 PM2&lt;/strong&gt;：&lt;code&gt;sudo npm i pm2 -g&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;部署設定&quot;&gt;&lt;a href=&quot;#部署設定&quot; class=&quot;headerlink&quot; title=&quot;部署設定&quot;&gt;&lt;/a&gt;部署設定&lt;/h2&gt;&lt;p&gt;於專案資料夾底下執行 &lt;code&gt;pm2 ecosystem&lt;/code&gt; 生成 &lt;code&gt;ecosystem.json5&lt;/code&gt;，修改副檔名為 json 檔以便顯示語法 hightlight。&lt;/p&gt;
&lt;p&gt;將裡面的內容做修改&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/Knovour/f27c0cf743e991973f57.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;注意最後一句裡 &lt;code&gt;pm2 startOrRestart ecosystem.json&lt;/code&gt; 的副檔名是否相同。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;開始部署&quot;&gt;&lt;a href=&quot;#開始部署&quot; class=&quot;headerlink&quot; title=&quot;開始部署&quot;&gt;&lt;/a&gt;開始部署&lt;/h2&gt;&lt;p&gt;第一次部署時先執行 setup&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pm2 deploy ecosystem.json production setup&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;成功後就可以正式部署了&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pm2 deploy ecosystem.json production&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;之後專案更新時只要執行第二句即可。&lt;/p&gt;
&lt;p&gt;一切順利的話 PM2 就會在 server 端開始執行了。&lt;/p&gt;
&lt;h2 id=&quot;額外指令&quot;&gt;&lt;a href=&quot;#額外指令&quot; class=&quot;headerlink&quot; title=&quot;額外指令&quot;&gt;&lt;/a&gt;額外指令&lt;/h2&gt;&lt;p&gt;開機啟動：&lt;code&gt;pm2 startup -u DEPLOY_SERVER_USER_ACCOUNT&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;不設 &lt;code&gt;-u&lt;/code&gt;（user）的話，在開機時預設就會以 root 權限執行。&lt;/p&gt;
&lt;p&gt;其他指令或設定請至 &lt;a href=&quot;https://github.com/Unitech/pm2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PM2&lt;/a&gt; 檢視說明文件&lt;/p&gt;
&lt;h2 id=&quot;參考來源&quot;&gt;&lt;a href=&quot;#參考來源&quot; class=&quot;headerlink&quot; title=&quot;參考來源&quot;&gt;&lt;/a&gt;參考來源&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Unitech/pm2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PM2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Unitech/PM2/blob/master/ADVANCED_README.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PM2 Advance Readme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.toobug.net/article/using_pm2_deploy.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用 PM2 Deploy 部署基于 Git 版本管理的网站应用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/wohugb/pm2/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PM2 GitBook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://nicmitchell.com/2015/04/deploying-node-js-applications-with-pm2/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deploying Node.js Applications with PM2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      用 PM2 進行 node.js server 佈署。
    
    </summary>
    
    
      <category term="node.js" scheme="https://notes.knovour.ninja/tags/node-js/"/>
    
      <category term="deploy" scheme="https://notes.knovour.ninja/tags/deploy/"/>
    
  </entry>
  
  <entry>
    <title>用 Shipit 部署 node server</title>
    <link href="https://notes.knovour.ninja/2015/07/17/deploy-node-js-by-shipit/"/>
    <id>https://notes.knovour.ninja/2015/07/17/deploy-node-js-by-shipit/</id>
    <published>2015-07-17T15:42:00.000Z</published>
    <updated>2016-01-10T16:31:14.553Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前置作業&quot;&gt;&lt;a href=&quot;#前置作業&quot; class=&quot;headerlink&quot; title=&quot;前置作業&quot;&gt;&lt;/a&gt;前置作業&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;假設是全新的 Linux，帳號為 deploy&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 github 等託管服務中登錄 deploy server 的 ssh public key。&lt;/li&gt;
&lt;li&gt;設定 ssh 免密碼遠端登入：在 &lt;code&gt;.ssh/authorized_keys&lt;/code&gt; 裡貼上開發機的 ssh public key。&lt;/li&gt;
&lt;li&gt;如有需要，將 server 裡的 global package 裝好，如 bower、sails、grunt-cli 等等。&lt;/li&gt;
&lt;li&gt;設定 server 裡程式碼的存放位置，假設為 &lt;code&gt;/usr/src&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mkdir -p /usr/src/&lt;span class=&quot;keyword&quot;&gt;my&lt;/span&gt;-project-&lt;span class=&quot;built_in&quot;&gt;name&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;chown deploy:deploy /usr/src/&lt;span class=&quot;keyword&quot;&gt;my&lt;/span&gt;-project-&lt;span class=&quot;built_in&quot;&gt;name&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;在開發機安裝相關套件&quot;&gt;&lt;a href=&quot;#在開發機安裝相關套件&quot; class=&quot;headerlink&quot; title=&quot;在開發機安裝相關套件&quot;&gt;&lt;/a&gt;在開發機安裝相關套件&lt;/h2&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo npm &lt;span class=&quot;selector-tag&quot;&gt;i&lt;/span&gt; shipit-cli -g&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm &lt;span class=&quot;selector-tag&quot;&gt;i&lt;/span&gt; shipit-deploy shipit-npm --save-dev&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;ShipIt&quot;&gt;&lt;a href=&quot;#ShipIt&quot; class=&quot;headerlink&quot; title=&quot;ShipIt!&quot;&gt;&lt;/a&gt;ShipIt!&lt;/h2&gt;&lt;p&gt;在專案資料夾目錄產生 &lt;code&gt;shipitfile.js&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;內容如下&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;shipit&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;shipit-deploy&#39;&lt;/span&gt;)(shipit);  &lt;span class=&quot;comment&quot;&gt;// remote deploy&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;shipit-npm&#39;&lt;/span&gt;)(shipit);      &lt;span class=&quot;comment&quot;&gt;// remote auto install npm packages&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; config = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      workspace: &lt;span class=&quot;string&quot;&gt;&#39;/tmp/project-name-in-deploy-server&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      deployTo: &lt;span class=&quot;string&quot;&gt;&#39;/usr/src/project-name-in-deploy-server&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      repositoryUrl: &lt;span class=&quot;string&quot;&gt;&#39;your git remote url (github, bitbucket, etc...)&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      ignores: [&lt;span class=&quot;string&quot;&gt;&#39;.git&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;node_modules&#39;&lt;/span&gt;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      keepReleases: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    staging: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      servers: &lt;span class=&quot;string&quot;&gt;&#39;deploy@your-deploy-server-ip&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  shipit.initConfig(config);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;輸入 &lt;code&gt;shipit staging deploy&lt;/code&gt; 開始部署&lt;/p&gt;
&lt;h2 id=&quot;額外命令&quot;&gt;&lt;a href=&quot;#額外命令&quot; class=&quot;headerlink&quot; title=&quot;額外命令&quot;&gt;&lt;/a&gt;額外命令&lt;/h2&gt;&lt;figure class=&quot;highlight haxe&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;shipit.initConfig(config);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// code 加在這行之後&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; current = config.&lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;.deployTo + &lt;span class=&quot;string&quot;&gt;&#39;/current&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// shipit 會將 source code 放在 deploy server 專案資料夾裡的 current 中&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;shipit.task(&lt;span class=&quot;string&quot;&gt;&#39;server-on&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; shipit.remote(&lt;span class=&quot;string&quot;&gt;&#39;cd &#39;&lt;/span&gt; + current + &lt;span class=&quot;string&quot;&gt;&#39; &amp;amp;&amp;amp; bower i &amp;amp;&amp;amp; npm start&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;shipit.task(&lt;span class=&quot;string&quot;&gt;&#39;start&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  shipit.start([&lt;span class=&quot;string&quot;&gt;&#39;deploy&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;server-on&#39;&lt;/span&gt;]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;執行 &lt;code&gt;shipit staging start&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;基本設定的樣子&quot;&gt;&lt;a href=&quot;#基本設定的樣子&quot; class=&quot;headerlink&quot; title=&quot;基本設定的樣子&quot;&gt;&lt;/a&gt;基本設定的樣子&lt;/h2&gt;&lt;script src=&quot;https://gist.github.com/Knovour/97760c466552c2ed12db.js&quot;&gt;&lt;/script&gt;



&lt;h2 id=&quot;參考來源&quot;&gt;&lt;a href=&quot;#參考來源&quot; class=&quot;headerlink&quot; title=&quot;參考來源&quot;&gt;&lt;/a&gt;參考來源&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.therightcode.net/deploy-nodejs-application-using-shipit/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Forget Capistrano and deploy your node.js application using Shipit&lt;/a&gt;（裡面是用 grunt 當範例，但我用 grunt 的方式跑不起來）&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/shipitjs/shipit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Shipit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/shipitjs/shipit-deploy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;shipit-deploy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      用 Shipit 做簡單的 node.js server 佈署。
    
    </summary>
    
    
      <category term="node.js" scheme="https://notes.knovour.ninja/tags/node-js/"/>
    
      <category term="deploy" scheme="https://notes.knovour.ninja/tags/deploy/"/>
    
  </entry>
  
  <entry>
    <title>記錄幾個 Google 搜尋技巧</title>
    <link href="https://notes.knovour.ninja/2015/04/15/some-google-search-skills/"/>
    <id>https://notes.knovour.ninja/2015/04/15/some-google-search-skills/</id>
    <published>2015-04-15T13:43:00.000Z</published>
    <updated>2016-03-21T13:25:06.558Z</updated>
    
    <content type="html">&lt;p&gt;記錄幾個自己在搜尋時常用到的方式&lt;/p&gt;
&lt;h2 id=&quot;一般方式&quot;&gt;&lt;a href=&quot;#一般方式&quot; class=&quot;headerlink&quot; title=&quot;一般方式&quot;&gt;&lt;/a&gt;一般方式&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-&lt;/code&gt;：排除某個關鍵字。例：&lt;code&gt;ui -jquery&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;site:&lt;/code&gt;：搜尋特定網站內容。例：&lt;code&gt;site:medium.com node.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;關鍵字&amp;quot;&lt;/code&gt;：限定搜尋結果包含引號內完整字串。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;額外關鍵字&quot;&gt;&lt;a href=&quot;#額外關鍵字&quot; class=&quot;headerlink&quot; title=&quot;額外關鍵字&quot;&gt;&lt;/a&gt;額外關鍵字&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;alternative(s)&lt;/code&gt;：搜尋某個軟體或 library 有沒有類似的東西。若搜尋的是 library 相關的，搜尋結果裡的 &lt;a href=&quot;http://alternativeto.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AlternativeTo&lt;/a&gt; 網站則可以不用管，因為裡面舉的例子還是以軟體為主。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;how (to)&lt;/code&gt;：搜尋一些 server 或開發環境架設時會用到&lt;/li&gt;
&lt;li&gt;&lt;code&gt;附近&lt;/code&gt;：搜尋 Map 時會用到。如：&lt;code&gt;101 附近 餐廳&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;一些特殊符號的英文&quot;&gt;&lt;a href=&quot;#一些特殊符號的英文&quot; class=&quot;headerlink&quot; title=&quot;一些特殊符號的英文&quot;&gt;&lt;/a&gt;一些特殊符號的英文&lt;/h2&gt;&lt;p&gt;主要是以前剛接觸 CSS3 跟 HTML 時會找的符號 (sign 或 symbol)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;：greater than&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~&lt;/code&gt;：tilde&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt;：plus&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:&lt;/code&gt;：colon&lt;/li&gt;
&lt;li&gt;&lt;code&gt;;&lt;/code&gt;：semicolon&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-&lt;/code&gt;：dash、minus&lt;/li&gt;
&lt;li&gt;&lt;code&gt;_&lt;/code&gt;：underline&lt;/li&gt;
&lt;li&gt;&lt;code&gt;,&lt;/code&gt;：comma&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.&lt;/code&gt;：dot&lt;/li&gt;
&lt;li&gt;&lt;code&gt;•&lt;/code&gt;：bullet point&lt;/li&gt;
&lt;li&gt;&lt;code&gt;·&lt;/code&gt;：middot&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$&lt;/code&gt;：dollar&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#&lt;/code&gt;：number、pound (美式)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;幾個-UI-相關元件的英文&quot;&gt;&lt;a href=&quot;#幾個-UI-相關元件的英文&quot; class=&quot;headerlink&quot; title=&quot;幾個 UI 相關元件的英文&quot;&gt;&lt;/a&gt;幾個 UI 相關元件的英文&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hamburger menu&lt;/code&gt;：就是本 blog 左上角那三條線。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ghost button&lt;/code&gt;：只有 border 沒有 background-color 的按鈕。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      紀錄幾個自己在搜尋時常用到的方式（符號、關鍵字、某些符號的英文單字等）
    
    </summary>
    
    
      <category term="google" scheme="https://notes.knovour.ninja/tags/google/"/>
    
      <category term="search" scheme="https://notes.knovour.ninja/tags/search/"/>
    
  </entry>
  
</feed>
